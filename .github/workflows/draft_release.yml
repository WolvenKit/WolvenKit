name: WolvenKit-Draft-release
on:
  push:
    tags:
    - '*'

jobs:

  draft-wkit-win:
    runs-on: windows-latest

    steps:
    # setup
    - name: checkout
      uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.x

     # environmental variables
    - run: echo "PROJ=./WolvenKit/WolvenKit.csproj" >> $env:GITHUB_ENV
    - run: echo "PROJC=./WolvenKit.CLI/WolvenKit.CLI.csproj" >> $env:GITHUB_ENV
    - run: echo "OUT=./publish/app/" >> $env:GITHUB_ENV
    - run: echo "OUTC=./publish/console/" >> $env:GITHUB_ENV
    - run: echo "FINALOUT=./publish" >> $env:GITHUB_ENV
    - run: echo "NAME=WolvenKit" >> $env:GITHUB_ENV
    - run: echo "REF=${{github.ref}}" >> $env:GITHUB_ENV
    - run: echo "SHA=${{github.sha}}" >> $env:GITHUB_ENV
    - run: echo "MREPO=${{github.repository}}" >> $env:GITHUB_ENV
    - run: echo "VERSION=${{github.ref_name}}" >> $env:GITHUB_ENV

    - name: Get console version
      uses: naminodarie/get-net-sdk-project-versions-action@v1
      id: get-version-cli
      with:
        proj-path: ${{env.PROJC}}

    - run: echo "VERSIONC=${{steps.get-version-cli.outputs.assembly-version}}" >> $env:GITHUB_ENV
    
    # Publish app
    - run: dotnet publish ${{env.PROJ}} -o ${{env.OUT}} -c Release -p:InformationalVersion="${{env.VERSION}}"

    # Publish console
    - run: dotnet publish ${{env.PROJC}} -o ${{env.OUTC}} -c Release

    - run: echo "PORTABLE=${{env.NAME}}-${{env.VERSION}}.zip" >> $env:GITHUB_ENV
    - run: echo "CONSOLE=${{env.NAME}}.Console-${{env.VERSIONC}}.zip" >> $env:GITHUB_ENV
    # - run: echo "INSTALLER=${{env.NAME}}-installer-${{env.VERSION}}.exe" >> $env:GITHUB_ENV

    # Create assets
    # create zip
    - run: Compress-Archive -Path ${{env.OUT}}* -DestinationPath ${{env.PORTABLE}}
    - run: Compress-Archive -Path ${{env.OUTC}}* -DestinationPath ${{env.CONSOLE}}
    # create installer
    # - run: .\Installers\ISCC\ISCC.exe /O"${{env.FINALOUT}}" /dMyAppBaseDir=".${{env.OUT}}" .\Installers\installer.iss

    # RELEASE
    - uses: ncipollo/release-action@v1
      with:
        draft: true
        generateReleaseNotes: true
        artifacts: "*.zip"
        bodyFile: "RELEASE.md"
        token: ${{ secrets.GITHUB_TOKEN }}
