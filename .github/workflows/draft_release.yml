name: WolvenKit-Draft-release
on:
  workflow_dispatch:
 
jobs:

  draft-wkit-win:
    runs-on: windows-latest

    steps:
    # setup  
    - name: checkout
      uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: dotnet clean
      run: dotnet clean ./WolvenKit.sln --configuration Release && dotnet nuget locals all --clear
    - name: dotnet restore
      run: dotnet restore ./WolvenKit.sln 

     # environmental variables
    - run: echo "PROJ=./WolvenKit/WolvenKit.csproj" >> $env:GITHUB_ENV
    - run: echo "OUT=./publish/full" >> $env:GITHUB_ENV
    - run: echo "FINALOUT=./publish" >> $env:GITHUB_ENV
    - run: echo "NAME=WolvenKit" >> $env:GITHUB_ENV
    - name: Get version
      uses: naminodarie/get-net-sdk-project-versions-action@v1
      id: get-version
      with:
        proj-path:  ${{env.PROJ}}
    - run: echo "VERSION=${{steps.get-version.outputs.version}}" >> $env:GITHUB_ENV
    - run: echo "PORTABLE=${{env.NAME}}-${{env.VERSION}}.zip" >> $env:GITHUB_ENV
    - run: echo "INSTALLER=${{env.NAME}}-installer-${{env.VERSION}}.exe" >> $env:GITHUB_ENV
    - run: echo "MANIFEST=manifest.json" >> $env:GITHUB_ENV

    # Publish app
    - run: dotnet publish ${{env.PROJ}} -o ${{env.OUT}} --no-self-contained --no-restore -r win-x64 -c Release -f net5.0-windows

    # Create assets
    - run: ${{env.OUT}}/WolvenManager.Installer.exe create -a ${{env.OUT}}\${{env.NAME}}.exe -o ${{env.FINALOUT}}
    - run: .\Installers\ISCC\ISCC.exe /O"${{env.FINALOUT}}" /dMyAppBaseDir=".${{env.OUT}}\" .\Installers\installer.iss
    - run: ${{env.OUT}}/WolvenManager.Installer.exe manifest -a ${{env.OUT}}\${{env.NAME}}.exe -i ${{env.FINALOUT}} -o ${{env.FINALOUT}}

    # PORTABLE
    - uses: actions/upload-artifact@v2
      with:
        name: ${{env.PORTABLE}}
        path: ${{env.FINALOUT}}/${{env.PORTABLE}}
    # INSTALLER
    - uses: actions/upload-artifact@v2
      with:
        name: ${{env.INSTALLER}}
        path: ${{env.FINALOUT}}/${{env.INSTALLER}}
    # MANIFEST
    - uses: actions/upload-artifact@v2
      with:
        name: ${{env.MANIFEST}}
        path: ${{env.FINALOUT}}/${{env.MANIFEST}}


    # RELEASE
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: ./CHANGELOG.md
        files: |
          ${{env.FINALOUT}}/${{env.PORTABLE}}
          ${{env.FINALOUT}}/${{env.INSTALLER}}
          ${{env.FINALOUT}}/${{env.MANIFEST}}
        draft: true
        name: ${{env.NAME}} v${{env.VERSION}}
        tag_name: "${{env.VERSION}}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
