<reactiveUi:ReactiveUserControl
    x:Class="WolvenKit.Views.Editors.RedTypeView"
    x:TypeArguments="shell:ChunkViewModel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:WolvenKit.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editors="clr-namespace:WolvenKit.Views.Editors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:shell="clr-namespace:WolvenKit.App.ViewModels.Shell;assembly=WolvenKit.App"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:templates="clr-namespace:WolvenKit.Views.Templates"
    xmlns:tools="clr-namespace:WolvenKit.Views.Tools"
    mc:Ignorable="d"
    d:DesignWidth="800"
    d:DesignHeight="450">
    <Grid
        Background="{StaticResource ContentBackground}"
        IsSharedSizeScope="True"
        KeyboardNavigation.TabNavigation="Contained">
        <Grid.Resources>
            <SolidColorBrush x:Key="RedTypeColor" Color="{StaticResource WolvenKitTanColor}" />

            <!-- Do not hide anything by style if it's hidden by search - we'll be filtering the item collection -->
            <Style
                x:Key="HiddenByEditorModeStyle"
                TargetType="Grid">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsHiddenByEditorDifficultyLevel}" Value="False" />
                        </MultiDataTrigger.Conditions>

                        <Setter Property="Visibility" Value="Visible" />
                    </MultiDataTrigger>

                    <DataTrigger
                        Binding="{Binding Path=IsHiddenByEditorDifficultyLevel}"
                        Value="True">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate
                x:Key="AddHandleButton"
                DataType="{x:Type shell:ChunkViewModel}">
                <Button
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Style="{StaticResource ButtonCustom}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding AddHandleCommand}"
                    ToolTip="Add Handle">
                    <StackPanel Orientation="Horizontal">
                        <templates:IconBox
                            IconPack="Material"
                            Kind="PlusCircle"
                            Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                            Size="{DynamicResource WolvenKitIconMilli}"
                            Foreground="{StaticResource WolvenKitYellow}" />

                        <TextBlock
                            VerticalAlignment="Center"
                            Foreground="{StaticResource WolvenKitYellow}"
                            Text="Create Handle" />
                    </StackPanel>
                </Button>
            </DataTemplate>

            <DataTemplate
                x:Key="AddToCompiledDataButton"
                DataType="{x:Type shell:ChunkViewModel}">
                <Button
                    Padding="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Style="{StaticResource ButtonCustom}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding AddItemToCompiledDataCommand}"
                    ToolTip="Add New Chunk">
                    <StackPanel Orientation="Horizontal">
                        <templates:IconBox
                            IconPack="Material"
                            Kind="PlusCircle"
                            Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                            Size="{DynamicResource WolvenKitIconMilli}"
                            Foreground="{StaticResource WolvenKitYellow}" />

                        <TextBlock
                            VerticalAlignment="Center"
                            Foreground="{StaticResource WolvenKitYellow}"
                            Text="Create Item In Buffer" />
                    </StackPanel>
                </Button>
            </DataTemplate>

            <DataTemplate
                x:Key="AddDynamicProperty"
                DataType="{x:Type shell:ChunkViewModel}">
                <Button
                    Padding="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Style="{StaticResource ButtonCustom}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding CreateDynamicPropertyCommand}"
                    ToolTip="Add Dynamic Property">
                    <StackPanel Orientation="Horizontal">
                        <templates:IconBox
                            IconPack="Material"
                            Kind="PlusCircle"
                            Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                            Size="{DynamicResource WolvenKitIconMilli}"
                            Foreground="{StaticResource WolvenKitYellow}" />

                        <TextBlock
                            VerticalAlignment="Center"
                            Foreground="{StaticResource WolvenKitYellow}"
                            Text="Add Property" />
                    </StackPanel>
                </Button>
            </DataTemplate>

            <DataTemplate
                x:Key="RenameDynamicClass"
                DataType="{x:Type shell:ChunkViewModel}">
                <Button
                    Padding="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Style="{StaticResource ButtonCustom}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding RenameDynamicClassCommand}"
                    ToolTip="Rename Dynamic Class">
                    <StackPanel Orientation="Horizontal">
                        <templates:IconBox
                            IconPack="Material"
                            Kind="CursorDefault"
                            Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                            Size="{DynamicResource WolvenKitIconMilli}"
                            Foreground="{StaticResource WolvenKitCyan}" />

                        <TextBlock
                            VerticalAlignment="Center"
                            Foreground="{StaticResource WolvenKitCyan}"
                            Text="Rename Dynamic Class" />
                    </StackPanel>
                </Button>
            </DataTemplate>

            <DataTemplate x:Key="AddToArrayButton">
                <Button
                    Padding="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Style="{StaticResource ButtonCustom}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding AddItemToArrayCommand}"
                    ToolTip="Add New Element">
                    <StackPanel Orientation="Horizontal">
                        <templates:IconBox
                            IconPack="Material"
                            Kind="PlusCircle"
                            Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                            Size="{DynamicResource WolvenKitIconMilli}"
                            Foreground="{StaticResource WolvenKitYellow}" />

                        <TextBlock
                            VerticalAlignment="Center"
                            Foreground="{StaticResource WolvenKitYellow}"
                            Text="Create Item In Array" />
                    </StackPanel>
                </Button>
            </DataTemplate>

            <DataTemplate x:Key="DeleteButton">
                <StackPanel
                    Visibility="{Binding IsDeletable,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Orientation="Horizontal">
                    <ToggleButton
                        x:Name="DeleteButton"
                        Margin="0"
                        Padding="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        IsChecked="{Binding IsDeleteReady}"
                        ToolTip="Delete Element">
                        <ToggleButton.Style>
                            <Style
                                BasedOn="{StaticResource ToggleButtonCustom}"
                                TargetType="ToggleButton">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <templates:IconBox
                                                IconPack="Material"
                                                Kind="Delete"
                                                Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                                                Size="{DynamicResource WolvenKitIconMilli}"
                                                Foreground="{StaticResource WolvenKitRed}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding IsInArray}"
                                        Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>

                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <TextBlock
                                                        Margin="{DynamicResource WolvenKitMarginTinyLeft}"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Text="Confirm?" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>

                    <Button
                        x:Name="RealDeleteButton"
                        Margin="0"
                        Padding="0"
                        VerticalAlignment="Center"
                        Command="{Binding DeleteItemCommand}"
                        ToolTip="Delete Element">
                        <Button.Style>
                            <Style
                                BasedOn="{StaticResource ButtonCustom}"
                                TargetType="{x:Type Button}">
                                <Setter Property="Visibility" Value="Collapsed" />

                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding IsChecked,
                                                          ElementName=DeleteButton}"
                                        Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <templates:IconBox
                            IconPack="Material"
                            Kind="Delete"
                            Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                            Size="{DynamicResource WolvenKitIconMilli}"
                            Foreground="{StaticResource WolvenKitRed}" />
                    </Button>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="DeleteAllButton">
                <StackPanel
                    Visibility="{Binding IsEnabled,
                                         ElementName=RealDeleteButton,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Orientation="Horizontal">
                    <ToggleButton
                        x:Name="DeleteButton"
                        Margin="0"
                        Padding="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsChecked="{Binding IsDeleteReady}"
                        ToolTip="Delete All Items">
                        <ToggleButton.Style>
                            <Style
                                BasedOn="{StaticResource ToggleButtonCustom}"
                                TargetType="ToggleButton">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Grid Background="Transparent">
                                                <StackPanel Orientation="Horizontal">
                                                    <templates:IconBox
                                                        IconPack="Material"
                                                        Kind="Delete"
                                                        Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                                                        Size="{DynamicResource WolvenKitIconMilli}"
                                                        Foreground="{StaticResource WolvenKitRed}" />

                                                    <TextBlock
                                                        VerticalAlignment="Center"
                                                        Foreground="{StaticResource WolvenKitRed}"
                                                        Text="Delete All Items" />
                                                </StackPanel>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding IsArray}"
                                        Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>

                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <TextBlock
                                                        Margin="{DynamicResource WolvenKitMarginTinyLeft}"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Text="Confirm?" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>

                    <Button
                        x:Name="RealDeleteButton"
                        Margin="0"
                        Padding="0"
                        VerticalAlignment="Center"
                        Command="{Binding DeleteAllCommand}"
                        ToolTip="Delete All">
                        <Button.Style>
                            <Style
                                BasedOn="{StaticResource ButtonCustom}"
                                TargetType="{x:Type Button}">
                                <Setter Property="Visibility" Value="Collapsed" />

                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding IsChecked,
                                                          ElementName=DeleteButton}"
                                        Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <templates:IconBox
                            IconPack="Material"
                            Kind="Delete"
                            Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                            Size="{DynamicResource WolvenKitIconMilli}"
                            Foreground="{StaticResource WolvenKitRed}" />
                    </Button>
                </StackPanel>
            </DataTemplate>

            <Style
                x:Key="PGNameStyle"
                TargetType="TextBlock">
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding IsDefault}"
                        Value="True">
                        <Setter Property="FontStyle" Value="Italic" />
                        <Setter Property="Foreground" Value="{StaticResource BorderAlt2}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <converters:RedEditorTemplateSelector x:Key="redEditorTemplates">
                <converters:RedEditorTemplateSelector.RedStringEditor>
                    <DataTemplate>
                        <editors:RedStringEditor RedString="{Binding Data, Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedStringEditor>

                <converters:RedEditorTemplateSelector.RedCNameEditor>
                    <DataTemplate>
                        <editors:RedCNameEditor RedString="{Binding Data, Mode=TwoWay}">
                            <editors:RedCNameEditor.Style>
                                <Style TargetType="editors:RedCNameEditor">
                                    <EventSetter
                                        Event="ValueChanged"
                                        Handler="RedCNameEditor_ValueChanged" />
                                </Style>
                            </editors:RedCNameEditor.Style>
                        </editors:RedCNameEditor>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedCNameEditor>

                <converters:RedEditorTemplateSelector.RedTweakEditor>
                    <DataTemplate>
                        <editors:RedTweakEditor RedString="{Binding Data, Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedTweakEditor>

                <converters:RedEditorTemplateSelector.RedUlongEditor>
                    <DataTemplate>
                        <editors:RedUlongEditor RedNumber="{Binding Data, Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedUlongEditor>

                <converters:RedEditorTemplateSelector.RedChunkMaskEditor>
                    <DataTemplate>
                        <editors:RedChunkMaskEditor RedNumber="{Binding Data, Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedChunkMaskEditor>

                <converters:RedEditorTemplateSelector.RedColorEditor>
                    <DataTemplate>
                        <editors:RedColorEditor
                            DataContext="{Binding}"
                            RedColor="{Binding Data,
                                               Mode=TwoWay,
                                               UpdateSourceTrigger=PropertyChanged}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedColorEditor>

                <converters:RedEditorTemplateSelector.RedVectorColorEditor>
                    <DataTemplate>
                        <editors:RedVectorColorEditor
                            W="{Binding Data.W,
                                        Mode=TwoWay}"
                            X="{Binding Data.X,
                                        Mode=TwoWay}"
                            Y="{Binding Data.Y,
                                        Mode=TwoWay}"
                            Z="{Binding Data.Z,
                                        Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedVectorColorEditor>

                <converters:RedEditorTemplateSelector.RedColorPicker>
                    <DataTemplate>
                        <tools:RedColorPicker
                            DataContext="{Binding}"
                            RedHDRColor="{Binding Data,
                                                  Mode=TwoWay,
                                                  UpdateSourceTrigger=PropertyChanged}"
                            ShowAlpha="False" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedColorPicker>

                <converters:RedEditorTemplateSelector.RedCurveEditor>
                    <DataTemplate>
                        <editors:RedCurveEditor DataContext="{Binding}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedCurveEditor>

                <converters:RedEditorTemplateSelector.RedCurvePointEditor>
                    <DataTemplate>
                        <editors:RedCurvePointEditor
                            Point="{Binding Data.Point,
                                            Mode=TwoWay}"
                            Value="{Binding Data.Value,
                                            Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedCurvePointEditor>

                <converters:RedEditorTemplateSelector.RedRefEditor>
                    <DataTemplate>
                        <editors:RedRefEditor RedRef="{Binding Data, Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedRefEditor>

                <converters:RedEditorTemplateSelector.RedNodeRefEditor>
                    <DataTemplate>
                        <editors:RedNodeRefEditor RedNodeRef="{Binding Data, Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedNodeRefEditor>

                <converters:RedEditorTemplateSelector.RedLocalizationStringEditor>
                    <DataTemplate>
                        <editors:RedLocalizationStringEditor RedLocalizationString="{Binding Data, Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedLocalizationStringEditor>

                <converters:RedEditorTemplateSelector.HandleTemplateView>
                    <DataTemplate>
                        <TextBlock
                            Margin="0"
                            VerticalAlignment="Center"
                            FontSize="{DynamicResource WolvenKitFontSubTitle}"
                            Text="{Binding Value}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.HandleTemplateView>

                <converters:RedEditorTemplateSelector.BitfieldTemplateView>
                    <DataTemplate>
                        <templates:BitfieldTemplateView RedBitfield="{Binding Data, Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.BitfieldTemplateView>

                <converters:RedEditorTemplateSelector.EnumTemplateView>
                    <DataTemplate>
                        <templates:EnumTemplateView RedEnum="{Binding Data, Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.EnumTemplateView>

                <converters:RedEditorTemplateSelector.RedBoolEditor>
                    <DataTemplate>
                        <editors:RedBoolEditor RedBool="{Binding Data, Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedBoolEditor>

                <converters:RedEditorTemplateSelector.RedVector2Editor>
                    <DataTemplate>
                        <editors:RedVector2Editor
                            X="{Binding Data.X,
                                        Mode=TwoWay}"
                            Y="{Binding Data.Y,
                                        Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedVector2Editor>

                <converters:RedEditorTemplateSelector.RedVector3Editor>
                    <DataTemplate>
                        <editors:RedVector3Editor
                            X="{Binding Data.X,
                                        Mode=TwoWay}"
                            Y="{Binding Data.Y,
                                        Mode=TwoWay}"
                            Z="{Binding Data.Z,
                                        Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedVector3Editor>

                <converters:RedEditorTemplateSelector.RedWorldPositionEditor>
                    <DataTemplate>
                        <editors:RedWorldPositionEditor
                            X="{Binding Data.X,
                                        Mode=TwoWay}"
                            Y="{Binding Data.Y,
                                        Mode=TwoWay}"
                            Z="{Binding Data.Z,
                                        Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedWorldPositionEditor>

                <converters:RedEditorTemplateSelector.RedVector4Editor>
                    <DataTemplate>
                        <editors:RedVector4Editor
                            W="{Binding Data.W,
                                        Mode=TwoWay}"
                            X="{Binding Data.X,
                                        Mode=TwoWay}"
                            Y="{Binding Data.Y,
                                        Mode=TwoWay}"
                            Z="{Binding Data.Z,
                                        Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedVector4Editor>

                <converters:RedEditorTemplateSelector.RedQuaternionEditor>
                    <DataTemplate>
                        <editors:RedQuaternionEditor DataContext="{Binding}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedQuaternionEditor>

                <converters:RedEditorTemplateSelector.RedIntegerEditor>
                    <DataTemplate>
                        <editors:RedIntegerEditor RedInteger="{Binding Data, Mode=TwoWay}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedIntegerEditor>

                <converters:RedEditorTemplateSelector.RedFixedPointEditor>
                    <DataTemplate>
                        <editors:RedFixedPointEditor DataContext="{Binding}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedFixedPointEditor>

                <converters:RedEditorTemplateSelector.RedFloatEditor>
                    <DataTemplate>
                        <editors:RedFloatEditor DataContext="{Binding}" />
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedFloatEditor>

                <converters:RedEditorTemplateSelector.NullTemplate>
                    <DataTemplate />
                </converters:RedEditorTemplateSelector.NullTemplate>

                <converters:RedEditorTemplateSelector.RedTypeViewer>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <templates:IconBox
                                IconPack="Empty"
                                Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                                Size="{DynamicResource WolvenKitIconMicro}" />

                            <TextBlock
                                Margin="{DynamicResource WolvenKitMarginTinyRight}"
                                VerticalAlignment="Center"
                                Foreground="{StaticResource RedTypeColor}"
                                FontSize="{DynamicResource WolvenKitFontSubTitle}"
                                Text="{Binding Type,
                                               Mode=OneTime}" />

                            <TextBlock
                                Margin="{DynamicResource WolvenKitMarginTinyRight}"
                                VerticalAlignment="Center"
                                Foreground="White"
                                FontSize="{DynamicResource WolvenKitFontSubTitle}"
                                Text="{Binding Descriptor}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding Descriptor}"
                                                Value="">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <ContentPresenter ContentTemplate="{StaticResource AddToCompiledDataButton}" />
                            <ContentPresenter ContentTemplate="{StaticResource AddDynamicProperty}" />
                            <ContentPresenter ContentTemplate="{StaticResource AddHandleButton}" />
                            <ContentPresenter ContentTemplate="{StaticResource DeleteAllButton}" />
                        </StackPanel>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedTypeViewer>

                <converters:RedEditorTemplateSelector.RedArrayEditor>
                    <DataTemplate>
                        <Grid VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <StackPanel
                                Grid.Row="0"
                                Orientation="Horizontal">
                                <templates:IconBox
                                    IconPack="Codicons"
                                    Kind="SymbolClass"
                                    Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                                    Size="{DynamicResource WolvenKitIconMicro}" />

                                <TextBlock
                                    Name="PropertyType"
                                    VerticalAlignment="Center"
                                    Foreground="{StaticResource WolvenKitTan}"
                                    FontSize="{DynamicResource WolvenKitFontSubTitle}"
                                    Text="{Binding Type,
                                                   Mode=OneTime}" />

                                <StackPanel
                                    Margin="0"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding TypesDiffer,
                                                                      Mode=OneWay,
                                                                      UpdateSourceTrigger=PropertyChanged}"
                                                    Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>

                                    <templates:IconBox
                                        IconPack="Codicons"
                                        Kind="ArrowRight"
                                        Margin="{DynamicResource WolvenKitMarginMicroHorizontal}"
                                        Size="{DynamicResource WolvenKitIconNano}" />

                                    <TextBlock
                                        Margin="0"
                                        VerticalAlignment="Center"
                                        Foreground="{StaticResource WolvenKitTan}"
                                        FontSize="{DynamicResource WolvenKitFontSubTitle}"
                                        Text="{Binding ResolvedType,
                                                       Mode=OneWay,
                                                       UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>

                                <TextBlock
                                    Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                                    VerticalAlignment="Center"
                                    FontSize="{DynamicResource WolvenKitFontSubTitle}"
                                    Text="{Binding Descriptor}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding Descriptor}"
                                                    Value="">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <ContentPresenter ContentTemplate="{StaticResource AddToArrayButton}" />
                                <ContentPresenter ContentTemplate="{StaticResource AddToCompiledDataButton}" />
                                <ContentPresenter ContentTemplate="{StaticResource AddDynamicProperty}" />
                                <ContentPresenter ContentTemplate="{StaticResource AddHandleButton}" />
                                <ContentPresenter ContentTemplate="{StaticResource DeleteAllButton}" />
                            </StackPanel>
                            <!--ListView
                                Grid.Row="1"
                                AlternationCount="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}"
                                ItemTemplate="{StaticResource ItemTemplate}"
                                ItemsSource="{Binding Properties}"
                                ScrollViewer.CanContentScroll="False">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel
                                            IsVirtualizing="True"
                                            Orientation="Vertical"
                                            VirtualizationMode="Recycling" />
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                            </ListView-->
                        </Grid>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedArrayEditor>
            </converters:RedEditorTemplateSelector>

            <DataTemplate x:Key="ItemTemplate">
                <!-- ="{Binding Properties}" -->
                <Border
                    x:Name="TopLine"
                    MinHeight="{DynamicResource WolvenKitRedTreeRowMinHeight}"
                    BorderBrush="{StaticResource BorderAlt}"
                    BorderThickness="0,0,0,1"
                    Visibility="{Binding IsHiddenByEditorDifficultyLevel,
                                         Converter={StaticResource InvertBooleanConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="NameColumn" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Column="0"
                            Margin="{DynamicResource WolvenKitMarginTiny}"
                            VerticalAlignment="Top"
                            FontSize="{DynamicResource WolvenKitFontSubTitle}"
                            Style="{StaticResource PGNameStyle}"
                            Text="{Binding Name,
                                           Mode=OneTime}"
                            TextTrimming="CharacterEllipsis"
                            ToolTip="{Binding XPath,
                                              Mode=OneTime}" />

                        <ContentPresenter
                            x:Name="DeleteButtonWrapper"
                            Grid.Column="1"
                            Margin="{DynamicResource WolvenKitRedTreeMarginDeleteTop}"
                            VerticalAlignment="Top"
                            ContentTemplate="{StaticResource DeleteButton}"
                            DataContext="{Binding}" />

                        <GridSplitter
                            Grid.Column="2"
                            HorizontalAlignment="Stretch"
                            Background="{StaticResource BorderAlt}" />

                        <ContentControl
                            Grid.Column="3"
                            MinHeight="{DynamicResource WolvenKitRedTreeRowMinHeight}"
                            VerticalAlignment="Top"
                            Content="{Binding}"
                            ContentTemplateSelector="{DynamicResource redEditorTemplates}"
                            ToolTip="{Binding Type,
                                              Mode=OneTime}" />
                    </Grid>
                </Border>

                <!--HierarchicalDataTemplate.ItemTemplate>
                    <DataTemplate>
                        <Border
                            x:Name="TopLine"
                            MinHeight="27"
                            Margin="160,0,0,0"
                            BorderBrush="{StaticResource BorderAlt}"
                            BorderThickness="1,1,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition>
                                        <ColumnDefinition.Style>
                                            <Style TargetType="ColumnDefinition">
                                                <Setter Property="Width" Value="160" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsInArray}" Value="True">
                                                        <Setter Property="Width" Value="{Binding ArrayIndexWidth}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ColumnDefinition.Style>
                                    </ColumnDefinition>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="1" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Margin="6,5,0,0"
                                    VerticalAlignment="Top"
                                    Style="{StaticResource PGNameStyle}"
                                    Text="{Binding Name, Mode=OneTime}"
                                    TextTrimming="CharacterEllipsis"
                                    ToolTip="{Binding XPath, Mode=OneTime}" />
                                <ContentPresenter
                                    x:Name="DeleteButtonWrapper"
                                    Grid.Column="1"
                                    Margin="0,6,0,0"
                                    VerticalAlignment="Top"
                                    ContentTemplate="{StaticResource DeleteButton}"
                                    DataContext="{Binding}" />
                                <GridSplitter
                                    Grid.Column="2"
                                    HorizontalAlignment="Stretch"
                                    Background="{StaticResource BorderAlt}" />
                                <ContentControl
                                    Grid.Column="3"
                                    Content="{Binding}"
                                    ContentTemplateSelector="{DynamicResource redEditorTemplates}"
                                    ToolTip="{Binding Type, Mode=OneTime}" />
                            </Grid>
                        </Border>
                    </DataTemplate>
                </HierarchicalDataTemplate.ItemTemplate-->
            </DataTemplate>

            <Style TargetType="TextBox">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="{DynamicResource WolvenKitMarginTinyHorizontal}" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>

            <Style
                BasedOn="{StaticResource WPFComboBoxStyle}"
                TargetType="ComboBox">
                <Setter Property="Background" Value="#252525" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="{DynamicResource WolvenKitMarginTinyHorizontal}" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>

            <Style
                BasedOn="{StaticResource CheckBoxBaseStyle}"
                TargetType="CheckBox">
                <Setter Property="Background" Value="#252525" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Margin" Value="{DynamicResource WolvenKitMarginTinyHorizontal}" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>

            <Style
                BasedOn="{StaticResource SyncfusionUpDownStyle}"
                TargetType="{x:Type syncfusion:UpDown}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FocusedBackground" Value="Transparent" />
                <Setter Property="NegativeBackground" Value="Transparent" />
                <Setter Property="ZeroColor" Value="White" />
            </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- info at top -->
        <Border
            BorderBrush="{StaticResource BorderAlt}"
            BorderThickness="0,0,0,2">
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding}"
                            Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Grid Margin="{DynamicResource WolvenKitMarginTiny}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock
                    Grid.Row="0"
                    VerticalAlignment="Center"
                    FontSize="{DynamicResource WolvenKitFontSubTitle}"
                    Text="{Binding Tab.File.RelativePath}" />

                <TextBlock
                    Grid.Row="1"
                    VerticalAlignment="Center"
                    FontSize="{DynamicResource WolvenKitFontSubTitle}"
                    FontWeight="SemiBold"
                    Text="{Binding XPath}" />

                <StackPanel
                    Grid.Row="2"
                    Margin="{DynamicResource WolvenKitMarginTinyTop}"
                    Orientation="Horizontal">
                    <TextBlock
                        Name="PropertyType"
                        VerticalAlignment="Center"
                        Foreground="{StaticResource WolvenKitTan}"
                        FontSize="{DynamicResource WolvenKitFontSubTitle}"
                        Text="{Binding Type,
                                       Mode=OneTime}" />

                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding TypesDiffer,
                                                          Mode=OneWay,
                                                          UpdateSourceTrigger=PropertyChanged}"
                                        Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                        <templates:IconBox
                            IconPack="Codicons"
                            Kind="ArrowRight"
                            Size="{DynamicResource WolvenKitIconMilli}" />

                        <TextBlock
                            VerticalAlignment="Center"
                            Foreground="{StaticResource WolvenKitTan}"
                            FontSize="{DynamicResource WolvenKitFontSubTitle}"
                            Text="{Binding ResolvedType,
                                           Mode=OneWay,
                                           UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>

                    <ContentPresenter
                        Margin="{DynamicResource WolvenKitMarginTinyLeft}"
                        Content="{Binding}"
                        ContentTemplate="{StaticResource AddToCompiledDataButton}" />
                    <ContentPresenter
                        Content="{Binding}"
                        ContentTemplate="{StaticResource AddToArrayButton}" />
                    <ContentPresenter
                        Content="{Binding}"
                        ContentTemplate="{StaticResource AddDynamicProperty}" />
                    <ContentPresenter
                        Content="{Binding}"
                        ContentTemplate="{StaticResource AddHandleButton}" />
                    <ContentPresenter
                        Content="{Binding}"
                        ContentTemplate="{StaticResource DeleteAllButton}" />
                </StackPanel>
            </Grid>
        </Border>

        <!-- main editor list -->
        <!--
            ScrollViewer
            Grid.Row="1"
            Margin="0,-1,0,0"
            Padding="0"
            Tag="{Binding Level}"
            VerticalScrollBarVisibility="Auto"
        -->

        <TreeView
            Grid.Row="1"
            Margin="0"
            Padding="0"
            Background="{StaticResource ContentBackground}"
            BorderThickness="0"
            AlternationCount="{Binding RelativeSource={RelativeSource Self},
                                       Path=Items.Count}"
            IsManipulationEnabled="False"
            ItemTemplate="{StaticResource ItemTemplate}"
            ItemsSource="{Binding DisplayProperties}"
            ScrollViewer.CanContentScroll="True"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.ScrollUnit="Pixel"
            VirtualizingPanel.VirtualizationMode="Recycling">
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="IsExpanded" Value="True" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TreeViewItem">
                                <Grid
                                    Style="{StaticResource HiddenByEditorModeStyle}"
                                    IsEnabled="{Binding IsReadOnly,
                                                        Converter={StaticResource InvertBooleanConverter}}">
                                    <Grid>
                                        <ContentPresenter ContentSource="Header" />
                                    </Grid>

                                    <Grid Margin="0">
                                        <ItemsPresenter Name="ItemsHost" />
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
            <!--TreeView.Template>
                <ControlTemplate>
                    <Border
                        Height="Auto"
                        VerticalAlignment="Top"
                        BorderBrush="{StaticResource BorderAlt}"
                        BorderThickness="0,0,0,1">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </TreeView.Template-->
            <!--ItemsControl.Template>
                <ControlTemplate TargetType="ItemsControl">
                    <ScrollViewer
                        CanContentScroll="True"
                        Focusable="False"
                        Tag="{Binding Level}">
                        <Border
                            Height="Auto"
                            VerticalAlignment="Top"
                            BorderBrush="{StaticResource BorderAlt}"
                            BorderThickness="0,0,0,1">
                            <ItemsPresenter />
                        </Border>
                    </ScrollViewer>
                </ControlTemplate>
            </ItemsControl.Template-->
            <!--ItemsControl.Template>
                    <ControlTemplate>
                        <Border
                            Height="Auto"
                            VerticalAlignment="Top"
                            BorderBrush="{StaticResource BorderAlt}"
                            BorderThickness="0,0,0,1">
                            <ItemsPresenter />
                        </Border>
                    </ControlTemplate>
                </ItemsControl.Template-->
            <!--ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border x:Name="TopLine" BorderThickness="0,1,0,0" BorderBrush="{StaticResource BorderAlt}" MinHeight="{DynamicResource RowHeight}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition>
                                        <ColumnDefinition.Style>
                                            <Style TargetType="ColumnDefinition">
                                                <Setter Property="Width" Value="160"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsInArray}" Value="True">
                                                        <Setter Property="Width" Value="{Binding ArrayIndexWidth}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ColumnDefinition.Style>
                                    </ColumnDefinition>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="1"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Name}" ToolTip="{Binding XPath}" VerticalAlignment="Top" TextTrimming="CharacterEllipsis" Margin="6,5,0,5" Style="{StaticResource PGNameStyle}"/>
                                <ContentPresenter ContentTemplate="{StaticResource DeleteButton}" DataContext="{Binding}" Grid.Column="1" x:Name="DeleteButtonWrapper" VerticalAlignment="Top" Margin="0,6,0,0"/>
                                <GridSplitter Grid.Column="2" Background="{StaticResource BorderAlt}" HorizontalAlignment="Stretch"  />
                                <ContentControl Grid.Column="3" ToolTip="{Binding Type}" ContentTemplateSelector="{StaticResource redEditorTemplates}" Content="{Binding}"/>
                            </Grid>
                        </Border>
                        <DataTemplate.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter TargetName="TopLine" Property="BorderThickness" Value="0"/>
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate-->
        </TreeView>
        <!-- /ScrollViewer -->
    </Grid>
</reactiveUi:ReactiveUserControl>
