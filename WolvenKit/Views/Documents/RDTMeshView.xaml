<reactiveUi:ReactiveUserControl
    x:Class="WolvenKit.Views.Documents.RDTMeshView"
    x:TypeArguments="documents:RDTMeshViewModel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:documents="clr-namespace:WolvenKit.App.ViewModels.Documents;assembly=WolvenKit.App"
    xmlns:editors="clr-namespace:WolvenKit.Views.Editors"
    xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:others="clr-namespace:WolvenKit.Views.Others"
    xmlns:templates="clr-namespace:WolvenKit.Views.Templates"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type={x:Type documents:RDTMeshViewModel}}"
    d:DesignWidth="800"
    d:DesignHeight="450"
    BorderBrush="{StaticResource BorderAlt}"
    BorderThickness="1">
    <Grid>
        <Grid.Resources>
            <Style TargetType="ToolTip">
                <Setter Property="Background" Value="Black" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Style>

            <DataTemplate x:Key="WorldNodeIndexToolTipTemplate">
                <Grid>
                    <TextBlock
                        HorizontalAlignment="Center"
                        Text="WorldNodeIndex" />
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="WorldNodeDataIndicesToolTipTemplate">
                <Grid>
                    <TextBlock
                        HorizontalAlignment="Center"
                        Text="WorldNodeDataIndices" />
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="HeaderIconTemplate_WorldNodeIdx">
                <templates:IconBox
                    IconPack="Material"
                    Kind="Web"
                    Margin="0"
                    Size="{DynamicResource WolvenKitIconMicro}" />
            </DataTemplate>

            <DataTemplate x:Key="HeaderIconTemplate_WorldNodeDataIdx">
                <templates:IconBox
                    IconPack="Material"
                    Kind="ResistorNodes"
                    Margin="0"
                    Size="{DynamicResource WolvenKitIconMicro}" />
            </DataTemplate>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="{DynamicResource WolvenKitColumnTiny}" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>

        <StackPanel
            Grid.Row="0"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Orientation="Vertical">
            <Expander
                Style="{StaticResource BaseStyle}"
                Visibility="Collapsed"
                Header="Assimp info"
                IsExpanded="False">
                <TextBlock
                    Name="FileFormatsTextBlock"
                    Margin="10,5,10,0"
                    Text=""
                    TextWrapping="Wrap" />
            </Expander>
        </StackPanel>

        <hx:Viewport3DX
            Name="hxViewport"
            Grid.Row="0"
            Grid.Column="0"
            IsEnabled="{Binding IsLoaded}"
            BackgroundColor="#121212"
            Camera="{Binding Camera}"
            CoordinateSystemLabelForeground="White"
            EffectsManager="{Binding EffectsManager}"
            EnableRenderFrustum="True"
            EnableRenderOrder="True"
            FXAALevel="High"
            ShowCoordinateSystem="True"
            UseDefaultGestures="False"
            Loaded="Viewport3DX_Loaded"
            ZoomExtentsWhenLoaded="True">
            <hx:Viewport3DX.InputBindings>
                <MouseBinding
                    Command="hx:ViewportCommands.Rotate"
                    Gesture="LeftClick" />
                <MouseBinding
                    Command="hx:ViewportCommands.Pan"
                    Gesture="MiddleClick" />
                <MouseBinding
                    Command="hx:ViewportCommands.Rotate"
                    Gesture="Shift+MiddleClick" />
            </hx:Viewport3DX.InputBindings>

            <hx:DirectionalLight3D
                Direction="0, -1, 0"
                Color="White" />
            <hx:DirectionalLight3D
                Direction="0, 0, 1"
                Color="White" />
            <hx:DirectionalLight3D
                Direction="0, 0, -1"
                Color="White" />
            <hx:DirectionalLight3D
                Direction="1, 0, 0"
                Color="White" />
            <hx:DirectionalLight3D
                Direction="-1, 0, 0"
                Color="White" />

            <!-- hx:ShadowMap3D / -->
            <hx:DynamicReflectionMap3D IsDynamicScene="True">
                <!-- hx:EnvironmentMap3D Texture="{Binding EnvironmentMap}" / -->
                <hx:ItemsModel3D x:Name="hxContentVisual" />
            </hx:DynamicReflectionMap3D>

            <!-- hx:Element3DPresenter Content="{Binding GroupModel}" / -->
            <hx:Viewport3DX.ContextMenu>
                <ContextMenu>
                    <MenuItem
                        Click="ReloadModels"
                        Header="Zoom to extents">
                        <MenuItem.Icon>
                            <templates:IconBox
                                IconPack="Material"
                                Kind="MagnifyExpand"
                                Foreground="White" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </hx:Viewport3DX.ContextMenu>
        </hx:Viewport3DX>

        <others:LoadingTextControl
            Grid.Row="0"
            Grid.Column="0"
            VisibilityFlag="{Binding IsLoaded}"
            Small="True" />

        <syncfusion:SfGridSplitter
            Grid.Row="0"
            Grid.Column="1"
            HorizontalAlignment="Stretch" />

        <Grid
            Grid.Row="0"
            Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <StackPanel
                Grid.Row="0"
                Grid.Column="0"
                Width="Auto"
                IsEnabled="{Binding IsLoaded}"
                Grid.IsSharedSizeScope="True"
                Orientation="Vertical">
                <!-- Appearance -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="ColumnHeader" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Border
                        Grid.Row="0"
                        Grid.Column="0"
                        BorderBrush="{StaticResource BorderAlt}"
                        BorderThickness="0,0,1,1" />

                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                        Padding="{DynamicResource WolvenKitMarginTinyVertical}"
                        VerticalAlignment="Center"
                        Text="Appearance: " />

                    <Border
                        Grid.Row="0"
                        Grid.Column="1"
                        BorderBrush="{StaticResource BorderAlt}"
                        BorderThickness="0,0,0,1" />

                    <ComboBox
                        Grid.Row="0"
                        Grid.Column="1"
                        Padding="{DynamicResource WolvenKitMarginTinyHorizontal}"
                        DisplayMemberPath="Name"
                        ItemsSource="{Binding Appearances,
                                              Mode=OneWay}"
                        SelectedItem="{Binding SelectedAppearance,
                                               Mode=TwoWay,
                                               UpdateSourceTrigger=PropertyChanged}" />

                    <Border
                        Grid.Row="0"
                        Grid.Column="2"
                        BorderBrush="{StaticResource BorderAlt}"
                        BorderThickness="0,0,0,1" />

                    <Button
                        Grid.Row="0"
                        Grid.Column="2"
                        Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                        Padding="{DynamicResource WolvenKitMarginTiny}"
                        IsEnabled="{Binding IsAppearanceSelected}"
                        Command="{Binding CopyAppearanceNameCommand}"
                        ToolTip="Copy appearance name">
                        <templates:IconBox
                            IconPack="Material"
                            Kind="ContentCopy"
                            Margin="0"
                            Size="{DynamicResource WolvenKitIconMicro}"
                            Foreground="White" />
                    </Button>
                </Grid>

                <!-- Level of Detail -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="ColumnHeader" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Border
                        Grid.Row="0"
                        Grid.Column="0"
                        BorderBrush="{StaticResource BorderAlt}"
                        BorderThickness="0,0,1,1" />

                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                        Padding="{DynamicResource WolvenKitMarginTinyVertical}"
                        VerticalAlignment="Center"
                        Text="Level of Detail: " />

                    <Border
                        Grid.Row="0"
                        Grid.Column="1"
                        BorderBrush="{StaticResource BorderAlt}"
                        BorderThickness="0,0,0,1" />

                    <ComboBox
                        Grid.Row="0"
                        Grid.Column="1"
                        Padding="{DynamicResource WolvenKitMarginSmallHorizontal}"
                        ItemsSource="{Binding SelectedAppearance.LODLUT.Keys,
                                              Mode=OneWay}"
                        SelectedItem="{Binding SelectedAppearance.SelectedLOD,
                                               Mode=TwoWay,
                                               UpdateSourceTrigger=PropertyChanged}" />
                </Grid>

                <!-- Selection -->
                <Grid Visibility="{Binding PanelVisibility.ShowSelectionPanel, Converter={StaticResource VisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="ColumnHeader" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Border
                        Grid.Row="0"
                        Grid.Column="0"
                        BorderBrush="{StaticResource BorderAlt}"
                        BorderThickness="0,0,1,1" />

                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                        Padding="{DynamicResource WolvenKitMarginTinyVertical}"
                        VerticalAlignment="Center"
                        Text="Selection: " />

                    <Border
                        Grid.Row="0"
                        Grid.Column="1"
                        BorderBrush="{StaticResource BorderAlt}"
                        BorderThickness="0,0,0,1" />

                    <StackPanel
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="{DynamicResource WolvenKitMarginTinyLeft}"
                        VerticalAlignment="Center"
                        Visibility="{Binding CurrentSelection.IsValid,
                                             Converter={StaticResource VisibilityConverter}}"
                        Orientation="Horizontal">
                        <templates:IconBox
                            IconPack="Codicons"
                            Kind="SymbolClass"
                            Margin="0"
                            Size="{DynamicResource WolvenKitIconMicro}"
                            Foreground="White" />

                        <TextBlock
                            Margin="{DynamicResource WolvenKitMarginTinyLeft}"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource WolvenKitTan}"
                            Text="worldNodeData" />

                        <TextBlock
                            Margin="{DynamicResource WolvenKitMarginTinyLeft}"
                            Text="{Binding CurrentSelection.WorldNodeIndex,
                                           Mode=OneWay,
                                           UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock
                            Margin="{DynamicResource WolvenKitMarginTinyLeft}"
                            Text="{Binding CurrentSelection.Name,
                                           Mode=OneWay,
                                           UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                </Grid>

                <!-- Search Coordinate -->
                <StackPanel Orientation="Vertical">
                    <TextBlock
                        Margin="{DynamicResource WolvenKitMarginTiny}"
                        VerticalAlignment="Center"
                        Text="Search Coordinate:" />

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="{DynamicResource WolvenKitColumnTiny}" />
                            <RowDefinition />
                            <RowDefinition Height="{DynamicResource WolvenKitColumnTiny}" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="TextBlock" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                            VerticalAlignment="Center"
                            Text="X: " />
                        <editors:RedFloatEditor
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="{DynamicResource WolvenKitMarginTinyRight}"
                            RedNumber="{Binding SearchPoint.X,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock
                            Grid.Row="2"
                            Grid.Column="0"
                            Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                            VerticalAlignment="Center"
                            Text="Y: " />
                        <editors:RedFloatEditor
                            Grid.Row="2"
                            Grid.Column="1"
                            Margin="{DynamicResource WolvenKitMarginTinyRight}"
                            RedNumber="{Binding SearchPoint.Y,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock
                            Grid.Row="4"
                            Grid.Column="0"
                            Margin="{DynamicResource WolvenKitMarginTinyHorizontal}"
                            VerticalAlignment="Center"
                            Text="Z: " />

                        <editors:RedFloatEditor
                            Grid.Row="4"
                            Grid.Column="1"
                            Margin="{DynamicResource WolvenKitMarginTinyRight}"
                            RedNumber="{Binding SearchPoint.Z,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>

                    <Grid Margin="{DynamicResource WolvenKitMarginTinyTop}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Border
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            BorderBrush="{StaticResource BorderAlt}"
                            BorderThickness="0,0,0,1" />

                        <Button
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="{DynamicResource WolvenKitMarginTiny}"
                            Padding="{DynamicResource WolvenKitMarginTiny}"
                            HorizontalAlignment="Stretch"
                            Command="{Binding SearchForPointCommand}"
                            Content="Search for Coordinate" />

                        <Button
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="{DynamicResource WolvenKitMarginTiny}"
                            Padding="{DynamicResource WolvenKitMarginTiny}"
                            HorizontalAlignment="Stretch"
                            Command="{Binding ClearSearchCommand}"
                            Content="Clear Search" />
                    </Grid>
                </StackPanel>

                <!-- Load/Generate Materials -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Button
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="{DynamicResource WolvenKitMarginTiny}"
                        Padding="{DynamicResource WolvenKitMarginTiny}"
                        Foreground="{StaticResource WolvenKitYellow}"
                        IsEnabled="{Binding IsLoadingMaterials,
                                            Converter={StaticResource InvertBooleanConverter}}"
                        Command="{Binding LoadMaterialsCommand}"
                        ToolTip="This feature is experimental, watch log for completion (hold CTRL to clear cache)"
                        Content="Generate Materials">
                        <!--
                        TODO: fix/clean CTRL feature to show it in UI.
                        <Button.Style>
                            <Style
                                BasedOn="{StaticResource WPFButtonStyle}"
                                TargetType="{x:Type Button}">
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding IsCtrlKeyPressed}"
                                        Value="True">
                                        <Setter Property="Content" Value="Clear Cache and Regenerate" />
                                    </DataTrigger>

                                    <DataTrigger
                                        Binding="{Binding IsCtrlKeyPressed}"
                                        Value="False">
                                        <Setter Property="Content" Value="Generate Materials" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        -->
                    </Button>

                    <Button
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="{DynamicResource WolvenKitMarginTiny}"
                        Padding="{DynamicResource WolvenKitMarginTiny}"
                        Foreground="{StaticResource WolvenKitYellow}"
                        Visibility="{Binding PanelVisibility.ShowExportEntity,
                                             Converter={StaticResource VisibilityConverter}}"
                        Command="{Binding ExportEntityCommand}"
                        ToolTip="This feature is experimental"
                        Content="Export Appearance with Rig" />
                </Grid>

                <!-- Collisions/Sectors -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Button
                        x:Name="ToggleCollisionButton"
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="{DynamicResource WolvenKitMarginTiny}"
                        Padding="{DynamicResource WolvenKitMarginTiny}"
                        Visibility="{Binding PanelVisibility.ShowToggleCollision,
                                             Converter={StaticResource VisibilityConverter}}"
                        Command="{Binding ToggleCollisionCommand}"
                        Content="Toggle Collision"
                        ToolTip="Toggles the collision nodes" />

                    <Button
                        x:Name="AddSectorsButton"
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="{DynamicResource WolvenKitMarginTiny}"
                        Padding="{DynamicResource WolvenKitMarginTiny}"
                        Visibility="{Binding PanelVisibility.ShowAddSectors,
                                             Converter={StaticResource VisibilityConverter}}"
                        Command="{Binding AddSectorsToProjectCommand}"
                        Content="Add Sectors to Project"
                        ToolTip="Adds the selected sectors to the project" />
                </Grid>

                <!-- Button Click="ReloadModels" Content="Zoom to Extents" / -->

                <!-- Button Command="{Binding ExtractShadersCommand}" Content="Export Shaders" / -->
            </StackPanel>

            <!--syncfusion:SfTreeGrid
                Grid.Row="1"
                AllowResizingColumns="True"
                AutoExpandMode="AllNodesExpanded"
                AutoGenerateColumns="False"
                CheckBoxMappingName="IsEnabled"
                ChildPropertyName="BindName"
                ItemsSource="{Binding SelectedAppearance.Models, Mode=TwoWay}"
                NodeCheckStateChanged="SfTreeGrid_NodeCheckStateChanged"
                ParentPropertyName="Name"
                RowHeaderWidth="300"
                ShowCheckBox="True">
                <syncfusion:SfTreeGrid.Columns>
                    <syncfusion:TreeGridTextColumn
                        HeaderText="Component Name"
                        MappingName="Name"
                        MinimumWidth="300" />
                    <syncfusion:TreeGridTemplateColumn HeaderText="Chunk Mask">
                        <syncfusion:TreeGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <syncfusion:ComboBoxAdv
                                    AllowMultiSelect="True"
                                    Background="#252525"
                                    BorderThickness="0"
                                    ItemsSource="{Binding AllChunks, Mode=OneTime}"
                                    SelectedItems="{Binding EnabledChunks, Mode=TwoWay}"
                                    SelectedValueDelimiter=", "
                                    SelectionChanged="ComboBoxAdv_SelectionChanged" />
                            </DataTemplate>
                        </syncfusion:TreeGridTemplateColumn.CellTemplate>
                    </syncfusion:TreeGridTemplateColumn>
                    <syncfusion:TreeGridTextColumn HeaderText="Bind Name" MappingName="BindName" />
                    <syncfusion:TreeGridTextColumn HeaderText="Slot Name" MappingName="SlotName" />
                    <syncfusion:TreeGridTextColumn HeaderText="Material" MappingName="Materials[0].Name" />
                </syncfusion:SfTreeGrid.Columns>
            </syncfusion:SfTreeGrid-->

            <syncfusion:SfTreeGrid
                x:Name="NodeTreeGrid"
                Grid.Row="1"
                Grid.Column="0"
                Margin="-1,0,-1,-1"
                FontSize="{DynamicResource WolvenKitFontAltTitle}"
                ColumnSizer="AutoFillColumn"
                AllowFiltering="True"
                AllowResizingColumns="True"
                AutoExpandMode="AllNodesExpanded"
                AutoGenerateColumns="False"
                CheckBoxMappingName="IsRendering"
                ChildPropertyName="Children"
                FilterLevel="Extended"
                ItemsSource="{Binding SelectedModelGroup,
                                      Mode=TwoWay}"
                LiveNodeUpdateMode="AllowDataShaping"
                NodeCheckStateChanged="SfTreeGrid_NodeCheckStateChanged"
                SelectedItem="{Binding SelectedItem}"
                ShowCheckBox="True"
                TreeGridContextMenuOpening="SfTreeGrid_OnTreeGridContextMenuOpening">
                <syncfusion:SfTreeGrid.ExpanderContextMenu>
                    <ContextMenu>
                        <MenuItem
                            Click="CollapseAllChildrenRecursiveMenuItem_OnClick"
                            Header="Collapse All (Recursive)">
                            <MenuItem.Icon>
                                <templates:IconBox
                                    IconPack="Material"
                                    Kind="CollapseAll" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem
                            Click="ExpandAllChildrenRecursiveMenuItem_OnClick"
                            Header="Expand All (Recursive)">
                            <MenuItem.Icon>
                                <templates:IconBox
                                    IconPack="Material"
                                    Kind="ExpandAll" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator />

                        <MenuItem
                            Click="CheckAllChildrenMenuItem_OnClick"
                            Header="Check All Children">
                            <MenuItem.Icon>
                                <templates:IconBox
                                    IconPack="Material"
                                    Kind="CheckboxMarked" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem
                            Click="CheckAllChildrenRecursiveMenuItem_OnClick"
                            Header="Check All Children (Recursive)">
                            <MenuItem.Icon>
                                <templates:IconBox
                                    IconPack="Material"
                                    Kind="CheckboxMultipleMarked" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator />

                        <MenuItem
                            Click="UncheckAllChildrenMenuItem_OnClick"
                            Header="Uncheck All Children">
                            <MenuItem.Icon>
                                <templates:IconBox
                                    IconPack="Material"
                                    Kind="CheckboxBlank" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem
                            Click="UncheckAllChildrenRecursiveMenuItem_OnClick"
                            Header="Uncheck All Children (Recursive)">
                            <MenuItem.Icon>
                                <templates:IconBox
                                    IconPack="Material"
                                    Kind="CheckboxMultipleBlank" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </syncfusion:SfTreeGrid.ExpanderContextMenu>

                <syncfusion:SfTreeGrid.RecordContextMenu>
                    <ContextMenu>
                        <MenuItem
                            Click="CollapseAllChildrenRecursiveMenuItem_OnClick"
                            Header="Collapse All (Recursive)">
                            <MenuItem.Icon>
                                <templates:IconBox
                                    IconPack="Material"
                                    Kind="CollapseAll" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem
                            Click="ExpandAllChildrenRecursiveMenuItem_OnClick"
                            Header="Expand All (Recursive)">
                            <MenuItem.Icon>
                                <templates:IconBox
                                    IconPack="Material"
                                    Kind="ExpandAll" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator />

                        <MenuItem
                            Click="CheckAllChildrenMenuItem_OnClick"
                            Header="Check All Children">
                            <MenuItem.Icon>
                                <templates:IconBox
                                    IconPack="Material"
                                    Kind="CheckboxMultipleMarked" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem
                            Click="CheckAllChildrenRecursiveMenuItem_OnClick"
                            Header="Check All Children (Recursive)">
                            <MenuItem.Icon>
                                <templates:IconBox
                                    IconPack="Material"
                                    Kind="CheckboxMultipleMarkedCircle" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator />

                        <MenuItem
                            Click="UncheckAllChildrenMenuItem_OnClick"
                            Header="Uncheck All Children">
                            <MenuItem.Icon>
                                <templates:IconBox
                                    IconPack="Material"
                                    Kind="CheckboxBlank" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem
                            Click="UncheckAllChildrenRecursiveMenuItem_OnClick"
                            Header="Uncheck All Children (Recursive)">
                            <MenuItem.Icon>
                                <templates:IconBox
                                    IconPack="Material"
                                    Kind="CheckboxMultipleBlank" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </syncfusion:SfTreeGrid.RecordContextMenu>

                <syncfusion:SfTreeGrid.Columns>
                    <syncfusion:TreeGridTextColumn
                        ColumnSizer="Auto"
                        HeaderText="Name"
                        MappingName="Text"
                        MinimumWidth="100" />

                    <!--syncfusion:TreeGridTemplateColumn HeaderText="Chunk Mask">
                        <syncfusion:TreeGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <syncfusion:ComboBoxAdv
                                    AllowMultiSelect="True"
                                    Background="#252525"
                                    BorderThickness="0"
                                    ItemsSource="{Binding AllChunks, Mode=OneTime}"
                                    SelectedItems="{Binding EnabledChunks, Mode=TwoWay}"
                                    SelectedValueDelimiter=", "
                                    SelectionChanged="ComboBoxAdv_SelectionChanged" />
                            </DataTemplate>
                        </syncfusion:TreeGridTemplateColumn.CellTemplate>
                    </syncfusion:TreeGridTemplateColumn-->

                    <syncfusion:TreeGridTextColumn
                        ColumnSizer="SizeToCells"
                        HeaderText="Appearance"
                        MappingName="AppearanceName"
                        MinimumWidth="50" />

                    <syncfusion:TreeGridTextColumn
                        ColumnSizer="Auto"
                        HeaderText="#"
                        HeaderToolTipTemplate="{StaticResource WorldNodeIndexToolTipTemplate}"
                        MinimumWidth="50"
                        ShowHeaderToolTip="True"
                        HeaderTemplate="{StaticResource HeaderIconTemplate_WorldNodeIdx}"
                        MappingName="WorldNodeIndex" />

                    <syncfusion:TreeGridTextColumn
                        ColumnSizer="Auto"
                        HeaderText="Material"
                        MappingName="MaterialName"
                        MinimumWidth="80" />

                    <syncfusion:TreeGridTextColumn
                        ColumnSizer="Auto"
                        HeaderText="#"
                        ShowHeaderToolTip="True"
                        HeaderToolTipTemplate="{StaticResource WorldNodeDataIndicesToolTipTemplate}"
                        HeaderTemplate="{StaticResource HeaderIconTemplate_WorldNodeDataIdx}"
                        MinimumWidth="50"
                        MappingName="WorldNodeDataIndices" />

                    <syncfusion:TreeGridTextColumn
                        ColumnSizer="AutoFillColumn"
                        HeaderText="DepotPath"
                        MappingName="DepotPath"
                        MinimumWidth="80" />
                </syncfusion:SfTreeGrid.Columns>
            </syncfusion:SfTreeGrid>

            <!--ItemsControl ItemsSource="{Binding SelectedAppearance.Models, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.Template>
                        <ControlTemplate>
                            <ItemsPresenter />
                        </ControlTemplate>
                    </ItemsControl.Template>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="5,0,0,0" Orientation="Vertical">
                                <CheckBox
                                    Margin="0,2"
                                    Checked="ReloadModels"
                                    IsChecked="{Binding IsEnabled, Mode=TwoWay}"
                                    Unchecked="ReloadModels">
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
                                </CheckBox>
                                <TextBlock
                                    Margin="20,0,0,0"
                                    VerticalAlignment="Center"
                                    Text="{Binding BindName, StringFormat='bind: {0}'}" />
                                <TextBlock
                                    Margin="20,0,0,0"
                                    VerticalAlignment="Center"
                                    Text="{Binding SlotName, StringFormat='slot: {0}'}" />
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl-->
        </Grid>
    </Grid>
</reactiveUi:ReactiveUserControl>
