<reactiveUi:ReactiveUserControl
    x:Class="WolvenKit.Views.Documents.RDTMeshView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:documents="clr-namespace:WolvenKit.App.ViewModels.Documents;assembly=WolvenKit.App"
    xmlns:editors="clr-namespace:WolvenKit.Views.Editors"
    xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    Margin="0"
    d:DataContext="{d:DesignInstance Type={x:Type documents:RDTMeshViewModel}}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:TypeArguments="documents:RDTMeshViewModel"
    BorderBrush="{StaticResource BorderAlt}"
    BorderThickness="1,0,1,1"
    mc:Ignorable="d">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <syncfusion:SfGridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />


        <hx:Viewport3DX
            Name="hxViewport"
            BackgroundColor="#121212"
            Camera="{Binding Camera}"
            CoordinateSystemLabelForeground="White"
            EffectsManager="{Binding EffectsManager}"
            EnableRenderFrustum="True"
            EnableRenderOrder="True"
            FXAALevel="High"
            ShowCoordinateSystem="True"
            UseDefaultGestures="False"
            ZoomExtentsWhenLoaded="True">
            <hx:Viewport3DX.InputBindings>
                <MouseBinding Command="hx:ViewportCommands.Rotate" Gesture="LeftClick" />
                <MouseBinding Command="hx:ViewportCommands.Pan" Gesture="MiddleClick" />
                <MouseBinding Command="hx:ViewportCommands.Rotate" Gesture="Shift+MiddleClick" />
            </hx:Viewport3DX.InputBindings>
            <hx:DirectionalLight3D Direction="0, -1, 0" Color="White" />
            <hx:DirectionalLight3D Direction="0, 0, 1" Color="White" />
            <hx:DirectionalLight3D Direction="0, 0, -1" Color="White" />
            <hx:DirectionalLight3D Direction="1, 0, 0" Color="White" />
            <hx:DirectionalLight3D Direction="-1, 0, 0" Color="White" />
            <!--  hx:ShadowMap3D /  -->
            <hx:DynamicReflectionMap3D IsDynamicScene="True">
                <!--  hx:EnvironmentMap3D Texture="{Binding EnvironmentMap}" /  -->
                <hx:ItemsModel3D x:Name="hxContentVisual" />
            </hx:DynamicReflectionMap3D>
            <!--  hx:Element3DPresenter Content="{Binding GroupModel}" /  -->
            <hx:Viewport3DX.ContextMenu>
                <ContextMenu>
                    <MenuItem Click="ReloadModels" Header="Zoom to extents">
                        <MenuItem.Icon>
                            <iconPacks:PackIconCodicons Margin="5,0,0,0" Kind="ZoomOut" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </hx:Viewport3DX.ContextMenu>
        </hx:Viewport3DX>

        <StackPanel
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Orientation="Vertical">

            <Expander
                Header="Assimp info"
                IsExpanded="False"
                Style="{StaticResource BaseStyle}"
                Visibility="Collapsed">
                <TextBlock
                    Name="FileFormatsTextBlock"
                    Margin="10,5,10,0"
                    Text=""
                    TextWrapping="Wrap" />
            </Expander>
        </StackPanel>

        <!--syncfusion:DropDownButton
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Label="Options">
            <syncfusion:DropDownButton.IconTemplate>
                <DataTemplate>
                    <iconPacks:PackIconRemixIcon
                        Width="12"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Kind="Settings2Fill" />
                </DataTemplate>
            </syncfusion:DropDownButton.IconTemplate>
            <Border
                Margin="5"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Background="Black"
                BorderBrush="Black"
                BorderThickness="2"
                Visibility="Visible">
                <StackPanel Margin="10,5" Orientation="Vertical">

                    <Button
                        Name="LoadButton"
                        Height="26"
                        Margin="0,10,0,0"
                        HorizontalAlignment="Left"
                        Click="LoadButton_OnClick"
                        Content="Load file"
                        IsDefault="True"
                        Visibility="Collapsed" />

                    <TextBlock
                        Margin="0,4,0,0"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="(or drag and drop 3D model file)"
                        Visibility="Collapsed" />
                    <CheckBox
                        Name="CameraTypeCheckBox"
                        Margin="0,4,0,0"
                        HorizontalAlignment="Left"
                        Checked="CameraTypeCheckBox_Checked"
                        Content="Orthographic Camera"
                        IsChecked="True"
                        Unchecked="CameraTypeCheckBox_Checked" />
                    <CheckBox
                        Name="ShowWireframeCheckBox"
                        Margin="0,4,0,0"
                        HorizontalAlignment="Left"
                        Checked="OnShowWireframeCheckBoxCheckedChanged"
                        Content="Show wireframe"
                        IsChecked="True"
                        Unchecked="OnShowWireframeCheckBoxCheckedChanged" />
                    <CheckBox
                        Name="AddLineDepthBiasCheckBox"
                        Margin="0,4,0,0"
                        HorizontalAlignment="Left"
                        Checked="OnAddLineDepthBiasCheckBoxCheckedChanged"
                        Content="Add line depth bias (DXEngine only)"
                        IsChecked="True"
                        IsEnabled="{Binding ElementName=ShowWireframeCheckBox, Path=IsChecked}"
                        Unchecked="OnAddLineDepthBiasCheckBoxCheckedChanged" />
                    <CheckBox
                        Name="ReadPolygonIndicesCheckBox"
                        Margin="0,4,0,0"
                        HorizontalAlignment="Left"
                        Checked="OnReadPolygonIndicesCheckBoxCheckedChanged"
                        Content="Read PolygonIndices"
                        IsChecked="True"
                        ToolTip="When checked ReaderObj will read PolygonIndices collection that can be used to show polygons instead of triangles. Object need to be shown with wireframe to see the difference."
                        Unchecked="OnReadPolygonIndicesCheckBoxCheckedChanged" />

                    <Button
                        Name="ShowInfoButton"
                        Margin="0,20,0,0"
                        Click="ShowInfoButton_OnClick"
                        Content="Show objects info"
                        IsEnabled="False" />
                </StackPanel>
            </Border>
        </syncfusion:DropDownButton-->

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel
                Width="Auto"
                Grid.IsSharedSizeScope="True"
                Orientation="Vertical">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="ColumnHeader" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border BorderBrush="{StaticResource BorderAlt}" BorderThickness="1,0,1,1" />
                    <Border
                        Grid.Column="1"
                        BorderBrush="{StaticResource BorderAlt}"
                        BorderThickness="0,0,1,1" />
                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        Text="Appearance: " />
                    <ComboBox
                        Grid.Column="1"
                        Height="30"
                        Padding="10,0"
                        DisplayMemberPath="Name"
                        ItemsSource="{Binding Appearances, Mode=OneWay}"
                        SelectedItem="{Binding SelectedAppearance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="ColumnHeader" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border BorderBrush="{StaticResource BorderAlt}" BorderThickness="1,0,1,1" />
                    <Border
                        Grid.Column="1"
                        BorderBrush="{StaticResource BorderAlt}"
                        BorderThickness="0,0,1,1" />
                    <TextBlock
                        Grid.Column="0"
                        Margin="5,0"
                        VerticalAlignment="Center"
                        Text="Level of Detail: " />
                    <ComboBox
                        Grid.Column="1"
                        Height="30"
                        Padding="10,0"
                        ItemsSource="{Binding SelectedAppearance.LODLUT.Keys, Mode=OneWay}"
                        SelectedItem="{Binding SelectedAppearance.SelectedLOD, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                </Grid>
                <Grid Grid.Column="2" Visibility="{Binding PanelVisibility.ShowSelectionPanel, Converter={StaticResource VisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="ColumnHeader" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border BorderBrush="{StaticResource BorderAlt}" BorderThickness="1,0,1,1" />
                    <Border
                        Grid.Column="1"
                        BorderBrush="{StaticResource BorderAlt}"
                        BorderThickness="0,0,1,1" />
                    <TextBlock
                        Grid.Column="0"
                        Margin="5,7"
                        VerticalAlignment="Center"
                        Text="Selection: " />
                    <StackPanel
                        Grid.Column="1"
                        Height="15"
                        Margin="0,7,0,3"
                        VerticalAlignment="Center"
                        Orientation="Horizontal"
                        Visibility="{Binding CurrentSelection.IsValid, Converter={StaticResource VisibilityConverter}}">
                        <iconPacks:PackIconCodicons
                            Width="15"
                            Height="15"
                            Margin="6,0,0,2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Kind="SymbolClass" />

                        <TextBlock
                            Margin="5,0,0,0"
                            Foreground="{StaticResource WolvenKitTan}"
                            Text="worldNodeData" />
                        <TextBlock Margin="3,0,0,0" Text="{Binding CurrentSelection.WorldNodeIndex, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Margin="3,0,0,0" Text="{Binding CurrentSelection.Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                </Grid>
                <StackPanel Orientation="Vertical" Visibility="{Binding PanelVisibility.ShowSearchPanel, Converter={StaticResource VisibilityConverter}}">
                    <TextBlock
                        Margin="5,6,0,3"
                        VerticalAlignment="Center"
                        Text="Search Coordinate:" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"
                            Text="X: " />
                        <editors:RedFloatEditor
                            Grid.Column="1"
                            Height="24"
                            RedNumber="{Binding SearchPoint.X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"
                            Text="Y: " />
                        <editors:RedFloatEditor
                            Grid.Column="1"
                            Height="24"
                            RedNumber="{Binding SearchPoint.Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"
                            Text="Z: " />
                        <editors:RedFloatEditor
                            Grid.Column="1"
                            Height="24"
                            RedNumber="{Binding SearchPoint.Z, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Button
                            Grid.Column="0"
                            Margin="4"
                            HorizontalAlignment="Stretch"
                            Command="{Binding SearchForPointCommand}"
                            Content="Search for Coordinate" />
                        <Button
                            Grid.Column="1"
                            Height="24"
                            Margin="4"
                            HorizontalAlignment="Stretch"
                            Command="{Binding ClearSearchCommand}"
                            Content="Clear Search" />
                    </Grid>
                </StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Button
                        Grid.Row="1"
                        Grid.Column="0"
                        Height="24"
                        Margin="4"
                        HorizontalAlignment="Stretch"
                        Command="{Binding LoadMaterialsCommand}"
                        Content="Generate Materials for Appearance (experimental)"
                        IsEnabled="{Binding IsLoadingMaterials, Converter={StaticResource InvertBooleanConverter}}"
                        ToolTip="May take a while - watch log for completion (Hold Ctrl to clear cache)" />
                    <Button
                        Grid.Row="1"
                        Grid.Column="1"
                        Height="24"
                        Margin="4"
                        HorizontalAlignment="Stretch"
                        Command="{Binding ExportEntityCommand}"
                        Content="Export Appearance with Rig (experimental)"
                        Visibility="{Binding PanelVisibility.ShowExportEntity, Converter={StaticResource VisibilityConverter}}" />
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Button
                        x:Name="ToggleCollisionButton"
                        Grid.Row="0"
                        Grid.Column="0"
                        Height="24"
                        Margin="4"
                        HorizontalAlignment="Stretch"
                        Command="{Binding ToggleCollisionCommand}"
                        Content="Toggle Collision"
                        ToolTip="Toggles the collision nodes"
                        Visibility="{Binding PanelVisibility.ShowToggleCollision, Converter={StaticResource VisibilityConverter}}" />
                    <Button
                        x:Name="AddSectorsButton"
                        Grid.Row="0"
                        Grid.Column="1"
                        Height="24"
                        Margin="4"
                        HorizontalAlignment="Stretch"
                        Command="{Binding AddSectorsToProjectCommand}"
                        Content="Add Sectors to Project"
                        ToolTip="Adds the selected sectors to the project"
                        Visibility="{Binding PanelVisibility.ShowAddSectors, Converter={StaticResource VisibilityConverter}}" />
                </Grid>

                <!--  Button Click="ReloadModels" Content="Zoom to Extents" /  -->

                <!--  Button Command="{Binding ExtractShadersCommand}" Content="Export Shaders" /  -->

            </StackPanel>
            <!--syncfusion:SfTreeGrid
                Grid.Row="1"
                AllowResizingColumns="True"
                AutoExpandMode="AllNodesExpanded"
                AutoGenerateColumns="False"
                CheckBoxMappingName="IsEnabled"
                ChildPropertyName="BindName"
                ItemsSource="{Binding SelectedAppearance.Models, Mode=TwoWay}"
                NodeCheckStateChanged="SfTreeGrid_NodeCheckStateChanged"
                ParentPropertyName="Name"
                RowHeaderWidth="300"
                ShowCheckBox="True">
                <syncfusion:SfTreeGrid.Columns>
                    <syncfusion:TreeGridTextColumn
                        HeaderText="Component Name"
                        MappingName="Name"
                        MinimumWidth="300" />
                    <syncfusion:TreeGridTemplateColumn HeaderText="Chunk Mask">
                        <syncfusion:TreeGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <syncfusion:ComboBoxAdv
                                    AllowMultiSelect="True"
                                    Background="#252525"
                                    BorderThickness="0"
                                    ItemsSource="{Binding AllChunks, Mode=OneTime}"
                                    SelectedItems="{Binding EnabledChunks, Mode=TwoWay}"
                                    SelectedValueDelimiter=", "
                                    SelectionChanged="ComboBoxAdv_SelectionChanged" />
                            </DataTemplate>
                        </syncfusion:TreeGridTemplateColumn.CellTemplate>
                    </syncfusion:TreeGridTemplateColumn>
                    <syncfusion:TreeGridTextColumn HeaderText="Bind Name" MappingName="BindName" />
                    <syncfusion:TreeGridTextColumn HeaderText="Slot Name" MappingName="SlotName" />
                    <syncfusion:TreeGridTextColumn HeaderText="Material" MappingName="Materials[0].Name" />
                </syncfusion:SfTreeGrid.Columns>
            </syncfusion:SfTreeGrid-->
            <syncfusion:SfTreeGrid
                x:Name="NodeTreeGrid"
                Grid.Row="1"
                AllowFiltering="True"
                AllowResizingColumns="True"
                AutoExpandMode="AllNodesExpanded"
                AutoGenerateColumns="False"
                CheckBoxMappingName="IsRendering"
                ChildPropertyName="Children"
                FilterLevel="Extended"
                ItemsSource="{Binding SelectedAppearance.ModelGroup, Mode=TwoWay}"
                LiveNodeUpdateMode="AllowDataShaping"
                NodeCheckStateChanged="SfTreeGrid_NodeCheckStateChanged"
                RowHeaderWidth="300"
                SelectedItem="{Binding SelectedItem}"
                ShowCheckBox="True"
                TreeGridContextMenuOpening="SfTreeGrid_OnTreeGridContextMenuOpening">
                <syncfusion:SfTreeGrid.ExpanderContextMenu>
                    <ContextMenu>
                        <MenuItem Click="CollapseAllChildrenRecursiveMenuItem_OnClick" Header="Collapse All (Recursive)" />
                        <MenuItem Click="ExpandAllChildrenRecursiveMenuItem_OnClick" Header="Expand All (Recursive)" />
                        <MenuItem Click="CheckAllChildrenMenuItem_OnClick" Header="Check All Children" />
                        <MenuItem Click="CheckAllChildrenRecursiveMenuItem_OnClick" Header="Check All Children (Recursive)" />
                        <MenuItem Click="UncheckAllChildrenMenuItem_OnClick" Header="Uncheck All Children" />
                        <MenuItem Click="UncheckAllChildrenRecursiveMenuItem_OnClick" Header="Uncheck All Children (Recursive)" />
                    </ContextMenu>
                </syncfusion:SfTreeGrid.ExpanderContextMenu>
                <syncfusion:SfTreeGrid.RecordContextMenu>
                    <ContextMenu>
                        <MenuItem Click="CollapseAllChildrenRecursiveMenuItem_OnClick" Header="Collapse All (Recursive)" />
                        <MenuItem Click="ExpandAllChildrenRecursiveMenuItem_OnClick" Header="Expand All (Recursive)" />
                        <MenuItem Click="CheckAllChildrenMenuItem_OnClick" Header="Check All Children" />
                        <MenuItem Click="CheckAllChildrenRecursiveMenuItem_OnClick" Header="Check All Children (Recursive)" />
                        <MenuItem Click="UncheckAllChildrenMenuItem_OnClick" Header="Uncheck All Children" />
                        <MenuItem Click="UncheckAllChildrenRecursiveMenuItem_OnClick" Header="Uncheck All Children (Recursive)" />
                    </ContextMenu>
                </syncfusion:SfTreeGrid.RecordContextMenu>
                <syncfusion:SfTreeGrid.Columns>
                    <syncfusion:TreeGridTextColumn
                        ColumnSizer="Auto"
                        HeaderText="Name"
                        MappingName="Text"
                        MinimumWidth="100" />
                    <!--syncfusion:TreeGridTemplateColumn HeaderText="Chunk Mask">
                        <syncfusion:TreeGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <syncfusion:ComboBoxAdv
                                    AllowMultiSelect="True"
                                    Background="#252525"
                                    BorderThickness="0"
                                    ItemsSource="{Binding AllChunks, Mode=OneTime}"
                                    SelectedItems="{Binding EnabledChunks, Mode=TwoWay}"
                                    SelectedValueDelimiter=", "
                                    SelectionChanged="ComboBoxAdv_SelectionChanged" />
                            </DataTemplate>
                        </syncfusion:TreeGridTemplateColumn.CellTemplate>
                    </syncfusion:TreeGridTemplateColumn-->
                    <syncfusion:TreeGridTextColumn
                        ColumnSizer="Auto"
                        HeaderText="Appearance"
                        MappingName="AppearanceName"
                        MinimumWidth="100" />
                    <syncfusion:TreeGridTextColumn
                        ColumnSizer="Auto"
                        HeaderText="Material"
                        MappingName="MaterialName"
                        MinimumWidth="100" />
                    <syncfusion:TreeGridTextColumn
                        ColumnSizer="Auto"
                        HeaderText="DepotPath"
                        MappingName="DepotPath"
                        MinimumWidth="100" />
                    <syncfusion:TreeGridTextColumn
                        ColumnSizer="Auto"
                        HeaderText="WorldNodeIndex"
                        MappingName="WorldNodeIndex" />
                </syncfusion:SfTreeGrid.Columns>
            </syncfusion:SfTreeGrid>
            <!--ItemsControl ItemsSource="{Binding SelectedAppearance.Models, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.Template>
                        <ControlTemplate>
                            <ItemsPresenter />
                        </ControlTemplate>
                    </ItemsControl.Template>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="5,0,0,0" Orientation="Vertical">
                                <CheckBox
                                    Margin="0,2"
                                    Checked="ReloadModels"
                                    IsChecked="{Binding IsEnabled, Mode=TwoWay}"
                                    Unchecked="ReloadModels">
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
                                </CheckBox>
                                <TextBlock
                                    Margin="20,0,0,0"
                                    VerticalAlignment="Center"
                                    Text="{Binding BindName, StringFormat='bind: {0}'}" />
                                <TextBlock
                                    Margin="20,0,0,0"
                                    VerticalAlignment="Center"
                                    Text="{Binding SlotName, StringFormat='slot: {0}'}" />
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl-->
        </Grid>
    </Grid>
</reactiveUi:ReactiveUserControl>
