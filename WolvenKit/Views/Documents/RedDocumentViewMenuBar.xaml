<reactiveUi:ReactiveUserControl
    x:Class="WolvenKit.Views.Documents.RedDocumentViewMenuBar"
    x:TypeArguments="documents:RedDocumentViewToolbarModel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:documents="clr-namespace:WolvenKit.App.ViewModels.Documents;assembly=WolvenKit.App"
    xmlns:converters="clr-namespace:WolvenKit.Converters"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:templates="clr-namespace:WolvenKit.Views.Templates"
    mc:Ignorable="d"
    d:DesignWidth="800"
    d:DesignHeight="36"
    x:Name="RedDocumentViewToolbarControl">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.Resources>
            <converters:HasMenuChildrenVisibilityConverter x:Key="HasMenuChildrenVisibilityConverter" />

            <Style TargetType="{x:Type Menu}">
                <Setter Property="Background" Value="{StaticResource BackgroundColor_Frame_Background}" />
            </Style>

            <Style TargetType="{x:Type hc:SearchBar}">
                <Setter Property="Background" Value="{StaticResource BackgroundColor_Frame_Background}" />
            </Style>

            <Style
                x:Key="MenuItemStyle"
                TargetType="{x:Type MenuItem}">
                <Setter Property="FontSize" Value="{DynamicResource WolvenKitFontSubTitle}" />

                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock
                                Margin="{DynamicResource WolvenKitMarginSmallRight}"
                                VerticalAlignment="Center"
                                FontSize="{DynamicResource WolvenKitFontSubTitle}"
                                Text="{Binding}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="{DynamicResource WolvenKitMarginSmallVertical}" />
            </Style>

            <Style
                x:Key="NestedMenuItemStyle"
                BasedOn="{StaticResource MenuItemStyle}"
                TargetType="{x:Type MenuItem}">
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Path=IsEnabled,
                                          RelativeSource={RelativeSource Self}}"
                        Value="False">
                        <Setter Property="Background" Value="#121212" />
                        <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Grey_Inactive}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style
                x:Key="HasNestedMenuItemStyle"
                BasedOn="{StaticResource MenuItemStyle}"
                TargetType="{x:Type MenuItem}">
                <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource HasMenuChildrenVisibilityConverter}}" />
            </Style>

            <!-- Editor Mode -->
            <Style
                x:Key="EditorModeStyle"
                BasedOn="{StaticResource MenuItemStyle}"
                TargetType="{x:Type MenuItem}">
                <Setter Property="Foreground" Value="White" />

                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Path=EditorLevel}"
                        Value="Easy">
                        <Setter Property="Foreground" Value="{StaticResource WolvenKitCyan}" />
                    </DataTrigger>

                    <DataTrigger
                        Binding="{Binding Path=EditorLevel}"
                        Value="Default">
                        <Setter Property="Foreground" Value="{StaticResource WolvenKitYellow}" />
                    </DataTrigger>

                    <DataTrigger
                        Binding="{Binding Path=EditorLevel}"
                        Value="Advanced">
                        <Setter Property="Foreground" Value="{StaticResource WolvenKitRed}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- Materials: .mesh / .mi -->
            <Style
                x:Key="ShowMaterialsMenuItemStyle"
                BasedOn="{StaticResource MenuItemStyle}"
                TargetType="{x:Type MenuItem}">
                <Setter Property="Visibility" Value="Collapsed" />

                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Path=HasItems,
                                          RelativeSource={RelativeSource Self}}"
                        Value="True">
                        <Setter Property="Icon">
                            <Setter.Value>
                                <templates:IconBox
                                    IconPack="Material"
                                    Kind="Palette"
                                    Foreground="{StaticResource WolvenKitYellow}" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger
                        Binding="{Binding Path=ContentType,
                                          UpdateSourceTrigger=PropertyChanged}"
                        Value="{x:Static documents:RedDocumentItemType.Mi}">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>

                    <DataTrigger
                        Binding="{Binding Path=ContentType,
                                          UpdateSourceTrigger=PropertyChanged}"
                        Value="{x:Static documents:RedDocumentItemType.Mlsetup}">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>

                    <DataTrigger
                        Binding="{Binding Path=ContentType,
                                          UpdateSourceTrigger=PropertyChanged}"
                        Value="{x:Static documents:RedDocumentItemType.Mesh}">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>

                    <DataTrigger
                        Binding="{Binding Path=ContentType,
                                          UpdateSourceTrigger=PropertyChanged}"
                        Value="{x:Static documents:RedDocumentItemType.Mlsetup}">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- Clean up: .mesh / .json -->
            <Style
                x:Key="ShowCleanUpMenuItemStyle"
                BasedOn="{StaticResource HasNestedMenuItemStyle}"
                TargetType="{x:Type MenuItem}">
                <Setter Property="Visibility" Value="Collapsed" />

                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Path=ContentType,
                                          UpdateSourceTrigger=PropertyChanged}"
                        Value="{x:Static documents:RedDocumentItemType.Mesh}">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>

                    <DataTrigger
                        Binding="{Binding Path=ContentType,
                                          UpdateSourceTrigger=PropertyChanged}"
                        Value="{x:Static documents:RedDocumentItemType.Json}">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- Appearances: .ent -->
            <Style
                x:Key="ShowComponentsAppearancesMenuItemStyle"
                BasedOn="{StaticResource HasNestedMenuItemStyle}"
                TargetType="{x:Type MenuItem}">
                <Setter Property="Visibility" Value="Collapsed" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Path=ContentType}"
                        Value="{x:Static documents:RedDocumentItemType.App}">
                        <Setter Property="Header" Value="Appearances" />
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                    <DataTrigger
                        Binding="{Binding Path=ContentType}"
                        Value="{x:Static documents:RedDocumentItemType.Ent}">
                        <Setter Property="Header" Value="Components" />
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <!-- App file: .app -->
            <Style
                x:Key="ShowAppMenuItemStyle"
                BasedOn="{StaticResource NestedMenuItemStyle}"
                TargetType="{x:Type MenuItem}">
                <Setter Property="Visibility" Value="Collapsed" />

                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Path=ContentType,
                                          UpdateSourceTrigger=PropertyChanged}"
                        Value="{x:Static documents:RedDocumentItemType.App}">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- Mesh file: .mesh -->
            <Style
                x:Key="ShowMeshMenuItemStyle"
                BasedOn="{StaticResource MenuItemStyle}"
                TargetType="{x:Type MenuItem}">
                <Setter Property="Visibility" Value="Collapsed" />

                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Path=ContentType}"
                        Value="{x:Static documents:RedDocumentItemType.Mesh}">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- JSON file: .json -->
            <Style
                x:Key="ShowJsonMenuItemStyle"
                BasedOn="{StaticResource MenuItemStyle}"
                TargetType="{x:Type MenuItem}">
                <Setter Property="Visibility" Value="Collapsed" />

                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Path=ContentType,
                                          UpdateSourceTrigger=PropertyChanged}"
                        Value="{x:Static documents:RedDocumentItemType.Json}">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>

        <Menu
            x:Name="MenuBar"
            Grid.Row="0"
            Grid.Column="0"
            Margin="0,0,0,2"
            KeyDown="OnKeystateChanged"
            KeyUp="OnKeystateChanged"
            ContextMenuOpening="OnMenuOpened"
            ContextMenuClosing="OnMenuClosed">
            <!-- Editor Mode -->
            <MenuItem
                Style="{StaticResource EditorModeStyle}"
                Header="Editor Mode">
                <MenuItem.Icon>
                    <templates:IconBox
                        IconPack="Material"
                        Kind="EyeSettings" />
                </MenuItem.Icon>

                <MenuItem
                    Header="Easy"
                    Click="OnEditorModeClick_Easy">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="StarThreePoints"
                            Foreground="{StaticResource WolvenKitCyan}" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem
                    Header="Default"
                    Click="OnEditorModeClick_Default">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="StarFourPoints"
                            Foreground="{StaticResource WolvenKitYellow}" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem
                    Header="Advanced"
                    Click="OnEditorModeClick_Advanced">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="Star"
                            Foreground="{StaticResource WolvenKitRed}" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <!-- Materials: mesh files -->
            <MenuItem
                Style="{StaticResource ShowMaterialsMenuItemStyle}"
                Header="Materials"
                SubmenuOpened="OnMenuOpened"
                SubmenuClosed="OnMenuClosed">
                <MenuItem
                    Style="{StaticResource MenuItemStyle}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Header="Generate missing material entries"
                    Command="{Binding Path=GenerateMissingMaterialsCommand}"
                    Click="OnGenerateMissingMaterialsClick">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="Autorenew"
                            Foreground="White" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem
                    Style="{StaticResource MenuItemStyle}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Header="Scroll to material"
                    Command="{Binding Path=ScrollToMaterialCommand}">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="FileEye"
                            Foreground="White" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem
                    Style="{StaticResource MenuItemStyle}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Header="Toggle 'EnableMask'"
                    Command="{Binding Path=ToggleEnableMaskCommand}">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="ToggleSwitchOutline"
                            Foreground="White" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem
                    Style="{StaticResource MenuItemStyle}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    IsEnabled="{Binding Path=IsMaterialDefinition,
                                        Mode=OneWay}"
                    Header="Toggle 'IsLocalInstance'"
                    Command="{Binding Path=ToggleLocalInstanceCommand}">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="ToggleSwitchOutline"
                            Foreground="White" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem
                    Style="{StaticResource ShowMeshMenuItemStyle}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Header="Add material dependencies"
                    ToolTip="Will run 'delete unused materials' first"
                    Command="{Binding Path=AddDependenciesCommand}">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="Graph"
                            Foreground="White" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem
                    Style="{StaticResource ShowMeshMenuItemStyle}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Header="Add material dependencies (include basegame files)"
                    ToolTip="Will run 'delete unused materials' first"
                    Command="{Binding Path=AddDependenciesFullCommand}">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="GraphOutline"
                            Foreground="White" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <!-- Clean up: .mesh / .json -->
            <MenuItem
                Style="{StaticResource ShowCleanUpMenuItemStyle}"
                Header="Clean up"
                SubmenuOpened="OnMenuOpened"
                SubmenuClosed="OnMenuClosed">
                <MenuItem.Icon>
                    <templates:IconBox
                        IconPack="Material"
                        Kind="Recycle"
                        Foreground="{StaticResource WolvenKitRed}" />
                </MenuItem.Icon>

                <MenuItem
                    Style="{StaticResource ShowMeshMenuItemStyle}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Header="Convert preload materials to local"
                    Command="{Binding Path=ConvertPreloadMaterialsCommand}">
                    <MenuItem.Icon>
                        <templates:IconBox IconPack="Empty" />
                    </MenuItem.Icon>
                </MenuItem>

                <!-- Without SHIFT -->
                <MenuItem
                    Style="{StaticResource NestedMenuItemStyle}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Header="Delete unused materials"
                    Command="{Binding Path=DeleteUnusedMaterialsCommand}">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="ImageMinus"
                            Foreground="{StaticResource WolvenKitRed}" />
                    </MenuItem.Icon>
                </MenuItem>

                <!-- With SHIFT -->
                <MenuItem
                    Style="{StaticResource NestedMenuItemStyle}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Header="Clear all materials"
                    Command="{Binding Path=ClearMaterialsCommand}">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="Delete"
                            Foreground="{StaticResource WolvenKitRed}" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem
                    Style="{StaticResource ShowMeshMenuItemStyle}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Header="Adjust submesh counts"
                    Command="{Binding Path=AdjustSubmeshCountCommand}">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="LayersTriple"
                            Foreground="White" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem
                    Style="{StaticResource ShowJsonMenuItemStyle}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Header="Delete duplicate entries"
                    Command="{Binding Path=DeleteDuplicateEntriesCommand}">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="MinusCircleMultiple"
                            Foreground="{StaticResource WolvenKitRed}" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <!-- Appearances: .ent -->
            <MenuItem Style="{StaticResource ShowComponentsAppearancesMenuItemStyle}">
                <!-- Header: Apparances / Components is set in style -->
                <MenuItem.Icon>
                    <templates:IconBox
                        IconPack="Material"
                        Kind="PaletteSwatch"
                        Foreground="White" />
                </MenuItem.Icon>

                <MenuItem
                    Style="{StaticResource MenuItemStyle}"
                    Header="Regenerate visual controllers"
                    Command="{Binding Path=RegenerateVisualControllersCommand}">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="CogRefresh"
                            Foreground="White" />
                    </MenuItem.Icon>
                </MenuItem>

                <!-- Mesh component properties -->
                <MenuItem
                    Style="{StaticResource ShowAppMenuItemStyle}"
                    Header="Change mesh component properties"
                    Click="OnChangeChunkMasksClick">
                    <MenuItem.Icon>
                        <templates:IconBox IconPack="Empty" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Style="{StaticResource ShowAppMenuItemStyle}"
                    Header="Find unused files in project"
                    ToolTip="Will filter by extension: Only file extensions used in any references will be considered"
                    Click="OnFindUnusedProjectFilesClick">
                    <MenuItem.Icon>
                        <templates:IconBox IconPack="Empty" />
                    </MenuItem.Icon>
                </MenuItem>

                <!-- Select animation path -->
                <MenuItem
                    Style="{StaticResource MenuItemStyle}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Header="Change facial animations"
                    Command="{Binding Path=ChangeAnimationComponentCommand}"
                    Click="OnChangeAnimationClick">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="EmoticonHappy"
                            Foreground="White" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem
                    Style="{StaticResource WolvenKitToolBarItem}"
                    Visibility="{Binding Path=IsEnabled,
                                         RelativeSource={RelativeSource Self},
                                         Mode=OneWay,
                                         Converter={StaticResource BooleanToVisibilityConverter}}"
                    Header="Convert to photo mode app"
                    Command="{Binding Path=ConvertToPhotoModeAppCommand}"
                    Click="OnConvertToPhotoModeClick">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="Camera"
                            Foreground="White" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <!-- CRUID -->
            <MenuItem
                Style="{StaticResource MenuItemStyle}"
                Visibility="{Binding Path=IsEnabled,
                                     RelativeSource={RelativeSource Self},
                                     Mode=OneWay,
                                     Converter={StaticResource BooleanToVisibilityConverter}}"
                Header="Generate CRUID"
                Command="{Binding Path=GenerateNewCruidCommand}">
                <MenuItem.Icon>
                    <templates:IconBox
                        IconPack="Material"
                        Kind="Dice3"
                        Foreground="White" />
                </MenuItem.Icon>
            </MenuItem>

            <!-- Run file validation -->
            <MenuItem
                Style="{StaticResource MenuItemStyle}"
                Header="File Validation">
                <MenuItem.Icon>
                    <templates:IconBox
                        IconPack="Material"
                        Kind="TextSearch"
                        Foreground="White" />
                </MenuItem.Icon>
                <MenuItem
                    Style="{StaticResource MenuItemStyle}"
                    Header="Run WScript"
                    Click="OnFileValidationClick">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="Play"
                            Foreground="{StaticResource WolvenKitGreen}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Style="{StaticResource MenuItemStyle}"
                    Header="Find broken references"
                    Click="OnFindBrokenReferencesClick">
                    <MenuItem.Icon>
                        <templates:IconBox
                            IconPack="Material"
                            Kind="BookSearch"
                            Foreground="White" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <hc:SearchBar
            x:Name="SearchBar"
            Grid.Row="0"
            Grid.Column="1"
            Width="{DynamicResource WolvenKitRedDocumentSearchBarWidth}"
            Margin="0,0,0,2"
            HorizontalAlignment="Right"
            Background="{StaticResource BackgroundColor_Frame_Background}"
            BorderBrush="{StaticResource MahApps.Brushes.Gray.SemiTransparent}"
            BorderThickness="1"
            Style="{StaticResource SearchBarStyle}"
            hc:BorderElement.CornerRadius="0"
            hc:InfoElement.Necessary="True"
            hc:InfoElement.Placeholder="Search"
            hc:InfoElement.ShowClearButton="True"
            FlowDirection="LeftToRight"
            SearchStarted="SearchBar_OnSubmit"
            TextChanged="SearchBar_OnTextChanged" />
    </Grid>
</reactiveUi:ReactiveUserControl>