<reactiveUi:ReactiveUserControl
    x:Class="WolvenKit.Views.Documents.RedDocumentView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:docV="clr-namespace:WolvenKit.Views.Documents"
    xmlns:docVM="clr-namespace:WolvenKit.App.ViewModels.Documents;assembly=WolvenKit.App"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    d:DataContext="{d:DesignInstance Type={x:Type docVM:RedDocumentViewModel}}"
    d:DesignWidth="800"
    x:TypeArguments="docVM:RedDocumentViewModel"
    mc:Ignorable="d">


    <Grid hc:ThemeManager.RequestedAccentColor="{DynamicResource MahApps.Brushes.Accent3}">

        <Grid.Resources>

            <DataTemplate DataType="{x:Type docVM:RDTDataViewModel}">
                <docV:RDTDataView ViewModel="{Binding}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type docVM:RDTInkTextureAtlasViewModel}">
                <docV:RDTInkAtlasView DataContext="{Binding}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type docVM:RDTLayeredPreviewViewModel}">
                <docV:RDTLayeredTextureView DataContext="{Binding}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type docVM:RDTTextureViewModel}">
                <docV:RDTTextureView DataContext="{Binding}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type docVM:RDTTextViewModel}">
                <docV:RDTTextView ViewModel="{Binding}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type docVM:RDTMeshViewModel}">
                <docV:RDTMeshView ViewModel="{Binding}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type docVM:RDTWidgetViewModel}">
                <docV:RDTWidgetView ViewModel="{Binding}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type docVM:RDTGraphViewModel}">
                <docV:RDTGraphView ViewModel="{Binding}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type docVM:RDTGraphViewModel2}">
                <docV:RDTGraphView2 ViewModel="{Binding}" />
            </DataTemplate>

            <Style TargetType="{x:Type RowDefinition}" x:Key="MenuRowStyle">
                <Setter Property="Height" Value="Auto" />
            </Style>

        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="25"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <docV:RedDocumentViewToolbar Grid.Row="0" x:Name="RedDocumentViewToolbar" ViewModel="{Binding}" />
            
        <syncfusion:TabControlExt
            x:Name="TabControl"
            Grid.Row="1"
            Margin="-3,-2,-3,-3"
            Padding="0"
            AllowDragDrop="True"
            BorderThickness="0,0,0,0"
            CloseButtonType="Hide"
            EnableLabelEdit="False"
            IsNewButtonEnabled="True"
            Height="Auto"
            ItemsSource="{Binding TabItemViewModels, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
            SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectedItem="{Binding SelectedTabItemViewModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            ShowTabItemContextMenu="False"
            Style="{StaticResource WolvenKitTabControl}"
            TabPanelBackground="#313131"
            Tag="{Binding}">

            <syncfusion:TabControlExt.NewTabButtonTemplate>
                <DataTemplate>
                    <Button
                        Margin="0"
                        Padding="5,5"
                        Background="Transparent"
                        Command="{Binding Tag.NewEmbeddedFileCommand, RelativeSource={RelativeSource AncestorType=syncfusion:TabControlExt}}"
                        ToolTip="New Embedded File">
                        <Button.Content>
                            <iconPacks:PackIconCodicons
                                Width="11"
                                Height="11"
                                Padding="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Kind="Add" />
                        </Button.Content>
                    </Button>
                </DataTemplate>
            </syncfusion:TabControlExt.NewTabButtonTemplate>

            <syncfusion:TabControlExt.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="-5" Tag="{Binding}">

                        <TextBlock
                            Padding="5"
                            Mouse.MouseDown="OnToggleNoobFilter"
                            Text="{Binding Header}"
                            ToolTip="{Binding FilePath}" />

                        <Grid.ContextMenu>
                            <ContextMenu DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                                <TextBlock
                                    Foreground="Gray"
                                    IsEnabled="False"
                                    Text="{Binding Path=PlacementTarget.Tag.FilePath, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                    Visibility="{Binding Path=PlacementTarget.Tag.IsEmbeddedFile, RelativeSource={RelativeSource AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <MenuItem
                                    Command="{Binding PlacementTarget.Tag.RenameEmbeddedFileCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                    Header="Rename Embedded File"
                                    Visibility="{Binding Path=PlacementTarget.Tag.IsEmbeddedFile, RelativeSource={RelativeSource AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconCodicons
                                            Width="13"
                                            Height="13"
                                            Padding="0,0,0,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Kind="Edit" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem
                                    Command="{Binding PlacementTarget.Tag.ExtractEmbeddedFileCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                    Header="Extract Embedded File"
                                    Visibility="{Binding Path=PlacementTarget.Tag.IsEmbeddedFile, RelativeSource={RelativeSource AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconCodicons
                                            Width="13"
                                            Height="13"
                                            Padding="0,0,0,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Kind="Save" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem
                                    Command="{Binding PlacementTarget.Tag.DeleteEmbeddedFileCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                    Header="Delete Embedded File"
                                    Visibility="{Binding Path=PlacementTarget.Tag.IsEmbeddedFile, RelativeSource={RelativeSource AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconCodicons
                                            Width="13"
                                            Height="13"
                                            Padding="0,0,0,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Kind="Trash" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </Grid.ContextMenu>

                    </Grid>
                </DataTemplate>
            </syncfusion:TabControlExt.ItemTemplate>

        </syncfusion:TabControlExt>

    </Grid>

    
</reactiveUi:ReactiveUserControl>
