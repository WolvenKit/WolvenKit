<reactiveUi:ReactiveUserControl x:TypeArguments="documents:RedDocumentViewToolbarModel"
                                x:Class="WolvenKit.Views.Documents.RedDocumentViewToolbar"
                                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                xmlns:reactiveUi="http://reactiveui.net"
                                xmlns:documents="clr-namespace:WolvenKit.App.ViewModels.Documents;assembly=WolvenKit.App"
                                mc:Ignorable="d"
                                d:DesignHeight="30" d:DesignWidth="800">
    <Grid>

        <Grid.Resources>
            <!-- Menu style -->
            <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
                <Setter Property="Height" Value="25" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Grey1}" />
                <Setter Property="Background" Value="{StaticResource BackgroundColor_Frame_Background}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=ShowToolbar}" Value="False">
                        <Setter Property="Height" Value="0" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ShowToolbar}" Value="True">
                        <Setter Property="Height" Value="25" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- Menu item style -->
            <Style x:Key="WolvenKitToolBarItem" TargetType="{x:Type MenuItem}">
                <Setter Property="Margin" Value="3 4 3 0" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Grey1}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Grey_Dark}" />
                        <Setter Property="Background" Value="{StaticResource BackgroundColor_Button_Inactive}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>

        <Menu x:Name="MenuBar"
              Style="{StaticResource MenuStyle}"
              Visibility="{ Binding Path= ShowToolbar, Converter={ StaticResource BooleanToVisibilityConverter}
              }">

            <!-- Run file validation -->
            <MenuItem Header="File Validation"
                      Visibility="{ Binding Path= IsFileValidationMenuVisible, Converter={ StaticResource BooleanToVisibilityConverter}}"
                      Style="{StaticResource WolvenKitToolBarItem}">
                <MenuItem Header="Run FileValidation" Click="RunFileValidation" />
            </MenuItem>

            <!-- Mesh file: Materials menu -->
            <MenuItem Header="Materials"
                      Visibility="{ Binding Path= IsMesh, Converter={ StaticResource BooleanToVisibilityConverter}}"
                      Style="{StaticResource WolvenKitToolBarItem}">

                <!-- Convert preload materials -->
                <MenuItem Header="Convert preload materials to local"
                          IsEnabled="{Binding Path=IsConvertMaterialMenuEnabled}"
                          Click="OnConvertLocalMaterialsClick" />

                <!-- Generate missing materials -->
                <MenuItem Header="Generate missing material entries"
                          IsEnabled="{Binding Path=IsGenerateMaterialCommandEnabled}"
                          Click="OnGenerateMissingMaterialsClick" />

                <!-- No shift: "Delete unused Materials" -->
                <MenuItem Header="Delete unused materials"
                          Visibility="{ Binding Path= IsShiftkeyDown, Converter={ StaticResource BoolInvertConverter}}"
                          Click="OnDeleteUnusedMaterialsClick" />

                <!-- Shift: "Clear all Materials" -->
                <MenuItem Header="Clear all materials"
                          Visibility="{ Binding Path= IsShiftkeyDown, Converter={ StaticResource BooleanToVisibilityConverter}}"
                          Click="OnClearAllMaterialsClick" />
            </MenuItem>
        </Menu>
    </Grid>
</reactiveUi:ReactiveUserControl>