<reactiveUi:ReactiveUserControl x:TypeArguments="documents:RedDocumentViewToolbarModel"
                                x:Class="WolvenKit.Views.Documents.RedDocumentViewToolbar"
                                x:Name="RedDocumentViewToolbarControl"
                                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                xmlns:reactiveUi="http://reactiveui.net"
                                xmlns:documents="clr-namespace:WolvenKit.App.ViewModels.Documents;assembly=WolvenKit.App"
                                mc:Ignorable="d"
                                d:DesignHeight="30" d:DesignWidth="800">
    <Grid>

        <Grid.Resources>
            
            <!-- Menu style -->
            <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
                <Setter Property="Height" Value="25" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Grey1}" />
                <Setter Property="Background" Value="{StaticResource BackgroundColor_Frame_Background}" />
            </Style>

            <!-- Menu item style -->
            <Style x:Key="WolvenKitToolBarItem" TargetType="{x:Type MenuItem}">
                <Setter Property="Margin" Value="3 4 3 0" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Grey1}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Grey_Dark}" />
                        <Setter Property="Background" Value="{StaticResource BackgroundColor_Button_Inactive}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- Menu item style -->
            <Style x:Key="EditorModeDisplayStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource WolvenKitToolBarItem}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="8" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Cyan}" />
                <Setter Property="Background" Value="{StaticResource BackgroundColor_Cyan}" />
            </Style>

            <Style x:Key="EditorModeDisplayStyle_Yellow" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource EditorModeDisplayStyle}">
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Yellow}" />
                <Setter Property="Background" Value="{StaticResource BackgroundColor_Yellow}" />
            </Style>
            <Style x:Key="EditorModeDisplayStyle_Red" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource EditorModeDisplayStyle}">
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Red}" />
                <Setter Property="Background" Value="{StaticResource BackgroundColor_Red}" />
            </Style>

            <Style x:Key="EditorModeParentDisplayStyle" TargetType="{x:Type MenuItem}">
                <Setter Property="Opacity" Value="50" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="Header" Value="Editor Mode" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=RedDocumentViewToolbarControl, Path=DataContext.EditorLevel}" Value="Easy">
                        <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Cyan}" />
                        <Setter Property="Background" Value="{StaticResource BackgroundColor_Cyan}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ElementName=RedDocumentViewToolbarControl, Path=DataContext.EditorLevel}" Value="Default">
                        <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Yellow}" />
                        <Setter Property="Background" Value="{StaticResource BackgroundColor_Yellow}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ElementName=RedDocumentViewToolbarControl, Path=DataContext.EditorLevel}" Value="Advanced">
                        <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Red}" />
                        <Setter Property="Background" Value="{StaticResource BackgroundColor_Red}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>

        <Menu x:Name="MenuBar" Style="{StaticResource MenuStyle}">

            <!-- Run file validation -->
            <MenuItem Style="{StaticResource EditorModeParentDisplayStyle}">
                <MenuItem Header="Easy" Click="OnEditorModeClick_Easy" Style="{StaticResource EditorModeDisplayStyle}" />
                <MenuItem Header="Default" Click="OnEditorModeClick_Default" Style="{StaticResource EditorModeDisplayStyle_Yellow}" />
                <MenuItem Header="Advanced" Click="OnEditorModeClick_Advanced" Style="{StaticResource EditorModeDisplayStyle_Red}" />
            </MenuItem>

            <!-- Run file validation -->
            <MenuItem Header="File Validation"
                      Visibility="{ Binding  ElementName=RedDocumentViewToolbarControl, Path=DataContext.IsFileValidationMenuVisible, Converter={ StaticResource BooleanToVisibilityConverter}}"
                      Style="{StaticResource WolvenKitToolBarItem}">
                <MenuItem Header="Run FileValidation" Click="OnFileValidationClick" />
            </MenuItem>

            <!-- Mesh file: Materials menu -->
            <MenuItem Header="Materials"
                      Visibility="{ Binding  ElementName=RedDocumentViewToolbarControl, Path=DataContext.IsMesh, Converter={ StaticResource BooleanToVisibilityConverter}}"
                      Style="{StaticResource WolvenKitToolBarItem}">

                <!-- Convert preload materials -->
                <MenuItem Header="Convert preload materials to local"
                          IsEnabled="{Binding ElementName=RedDocumentViewToolbarControl, Path=DataContext.IsConvertMaterialMenuEnabled}"
                          Click="OnConvertLocalMaterialsClick" />

                <!-- Generate missing materials -->
                <MenuItem Header="Generate missing material entries"
                          IsEnabled="{Binding ElementName=RedDocumentViewToolbarControl, Path=DataContext.IsGenerateMaterialCommandEnabled}"
                          Click="OnGenerateMissingMaterialsClick" />

                <!-- No shift: "Delete unused Materials" -->
                <MenuItem Header="Delete unused materials"
                          Visibility="{ Binding ElementName=RedDocumentViewToolbarControl, Path=DataContext.IsShiftKeyDown, Converter={ StaticResource BoolInvertConverter}}"
                          Click="OnDeleteUnusedMaterialsClick" />

                <!-- Shift: "Clear all Materials" -->
                <MenuItem Header="Clear all materials"
                          Visibility="{ Binding ElementName=RedDocumentViewToolbarControl, Path=DataContext.IsShiftKeyDown, Converter={ StaticResource BooleanToVisibilityConverter}}"
                          Click="OnClearAllMaterialsClick" />
            </MenuItem>

            <!-- Ent file: Appearances menu -->
            <MenuItem Header="Appearances"
                      Visibility="{ Binding  ElementName=RedDocumentViewToolbarControl, Path=DataContext.IsRegenerateMaterialCommandEnabled, Converter={ StaticResource BooleanToVisibilityConverter}}"
                      Style="{StaticResource WolvenKitToolBarItem}">

                <!-- Convert preload materials -->
                <MenuItem Header="Regenerate materials" Click="OnRegenerateMaterialsClick" />

            </MenuItem>

            <!--CRUIDs -->
            <MenuItem Header="Generate CRUID"
                      Visibility="{ Binding  ElementName=RedDocumentViewToolbarControl, Path=DataContext.IsGenerateNewCruidCommandEnabled, Converter={ StaticResource BooleanToVisibilityConverter}}"
                      Style="{StaticResource WolvenKitToolBarItem}"
                      Click="OnGenerateNewCruidClick">
            </MenuItem>
            
            
        </Menu>
    </Grid>
</reactiveUi:ReactiveUserControl>