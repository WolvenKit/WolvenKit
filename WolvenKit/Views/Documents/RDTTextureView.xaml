<reactiveUi:ReactiveUserControl
    x:Class="WolvenKit.Views.Documents.RDTTextureView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:documents="clr-namespace:WolvenKit.App.ViewModels.Documents;assembly=WolvenKit.App"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    Margin="0"
    d:DataContext="{d:DesignInstance Type={x:Type documents:RDTTextureViewModel}}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:TypeArguments="documents:RDTTextureViewModel"
    BorderBrush="{StaticResource BorderAlt}"
    BorderThickness="1,0,1,1"
    mc:Ignorable="d">

    <Grid
        x:Name="ImageDropZone"
        AllowDrop="True"
        Background="Transparent">
        <Grid.Resources>
            <ResourceDictionary>
                <!--<ResourceDictionary.MergedDictionaries>
                    <hc:ThemeResources RequestedTheme="Dark" />
                    <hc:Theme />
                </ResourceDictionary.MergedDictionaries>-->

                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="pack://application:,,,/AdonisUI;component/ColorSchemes/Dark.xaml" />
                    <ResourceDictionary Source="pack://application:,,,/AdonisUI.ClassicTheme;component/Resources.xaml" />
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>


        <syncfusion:SfGridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />
        <StackPanel Grid.Column="2">
            <syncfusion:PropertyGrid
                AutoGenerateItems="True"
                ButtonPanelVisibility="Collapsed"
                PropertyExpandMode="FlatMode"
                PropertyNameColumnDefinition="100"
                SearchBoxVisibility="Collapsed"
                SelectedObject="{Binding SelectedItem}" />
            <TextBlock Padding="10,5" Text="Redscript Example" />
            <syncfusion:EditControl
                FontFamily="Fira Code"
                ShowLineNumber="False"
                Text="{Binding SelectedItem.RedscriptExample}" />
            <!--TextBlock Text="UIIcon TweakDB Example" Padding="10,5"/>
            <syncfusion:EditControl FontFamily="Fira Code" ShowLineNumber="False" Text="{Binding SelectedItem.TweakDBExample}"/-->
            <Canvas>
                <Image
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Opacity="1"
                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                    RenderTransformOrigin="0.5,0.5"
                    Source="{Binding SelectedItem.Image}">
                    <Image.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding SelectedItem.SaveImageCommand}" Header="Save as PNG" />
                        </ContextMenu>
                    </Image.ContextMenu>
                </Image>
            </Canvas>
        </StackPanel>
        <Border
            Grid.Column="0"
            Padding="0"
            Background="{StaticResource ContentBackground}"
            BorderThickness="1"
            ClipToBounds="True">
            <Border.ContextMenu>
                <ContextMenu>
                    <MenuItem Click="ResetZoomPan" Header="Reset Zoom/Pan" />
                    <MenuItem Click="SaveImage" Header="Save Image" />
                    <MenuItem Command="{Binding ReplaceTextureCommand}" Header="Replace Texture" />
                    <MenuItem Command="{Binding SaveAsCubeCommand}" Header="Save as cube" />
                    <MenuItem Command="{Binding LoadFromCubeCommand}" Header="Load from cube" />
                </ContextMenu>
            </Border.ContextMenu>
            <Border
                x:Name="ImagePreviewCanvas"
                Background="{StaticResource ContentBackground}"
                BorderThickness="1"
                ClipToBounds="True">
                <Canvas x:Name="ImagePreview" RenderTransformOrigin="0.5,0.5">
                    <Image
                        x:Name="ActualImage"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        ClipToBounds="False"
                        Opacity="1"
                        RenderOptions.BitmapScalingMode="NearestNeighbor"
                        RenderTransformOrigin="0.5,0.5"
                        Source="{Binding Image}" />
                    <ListBox
                        Width="{Binding Image.Width}"
                        Height="{Binding Image.Height}"
                        ItemsSource="{Binding OverlayItems}"
                        SelectedItem="{Binding SelectedItem}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Canvas.Left" Value="{Binding Left}" />
                                <Setter Property="Canvas.Top" Value="{Binding Top}" />
                                <Setter Property="Width" Value="{Binding Width}" />
                                <Setter Property="Height" Value="{Binding Height}" />
                                <Setter Property="ToolTip" Value="{Binding Name}" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="Opacity" Value="0.5" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="1.0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border
                                    Margin="-1"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="{StaticResource WolvenKitCyan50}"
                                    BorderThickness="1">
                                    <TextBlock
                                        Margin="2,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        FontSize="8"
                                        Foreground="{StaticResource WolvenKitCyan50}"
                                        Text="{Binding Name}"
                                        TextTrimming="None" />
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Canvas>
            </Border>
        </Border>

        <Border IsHitTestVisible="False">
            <Border.Style>
                <Style TargetType="Border">
                    <!--  Setter Property="Background" Value="{StaticResource WolvenKitRed50}" /  -->
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="Background" Value="Transparent" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsDragging}" Value="True">
                            <Setter Property="Background" Value="{StaticResource WolvenKitRed50}" />
                            <Setter Property="BorderBrush" Value="{StaticResource WolvenKitRed}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
    </Grid>
</reactiveUi:ReactiveUserControl>
