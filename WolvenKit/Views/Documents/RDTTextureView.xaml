<reactiveUi:ReactiveUserControl
    x:TypeArguments="documents:RDTTextureViewModel"
    x:Class="WolvenKit.Views.Documents.RDTTextureView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:documents="clr-namespace:WolvenKit.App.ViewModels.Documents;assembly=WolvenKit.App"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800"
    d:DataContext="{d:DesignInstance Type={x:Type documents:RDTTextureViewModel}}"
    BorderThickness="1,0,1,1"
    BorderBrush="{StaticResource BorderAlt}"
    Margin="0">

    <Grid AllowDrop="True" x:Name="ImageDropZone" Background="Transparent">
        <Grid.Resources>
            <ResourceDictionary>
                <!--<ResourceDictionary.MergedDictionaries>
                    <hc:ThemeResources RequestedTheme="Dark" />
                    <hc:Theme />
                </ResourceDictionary.MergedDictionaries>-->

                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="pack://application:,,,/AdonisUI;component/ColorSchemes/Dark.xaml"/>
                    <ResourceDictionary Source="pack://application:,,,/AdonisUI.ClassicTheme;component/Resources.xaml"/>
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        

        <syncfusion:SfGridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />
        <StackPanel Grid.Column="2">
            <syncfusion:PropertyGrid
            AutoGenerateItems="True"
            SelectedObject="{Binding SelectedItem}"
            PropertyNameColumnDefinition="100"
            SearchBoxVisibility="Collapsed"
            PropertyExpandMode="FlatMode"
            ButtonPanelVisibility="Collapsed"/>
            <TextBlock Text="Redscript Example" Padding="10,5"/>
            <syncfusion:EditControl FontFamily="Fira Code" ShowLineNumber="False" Text="{Binding SelectedItem.RedscriptExample}"/>
            <!--TextBlock Text="UIIcon TweakDB Example" Padding="10,5"/>
            <syncfusion:EditControl FontFamily="Fira Code" ShowLineNumber="False" Text="{Binding SelectedItem.TweakDBExample}"/-->
            <Canvas>
            <Image
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Source="{Binding SelectedItem.Image}"
                RenderTransformOrigin="0.5,0.5"
                RenderOptions.BitmapScalingMode="NearestNeighbor"
                Opacity="1">
                    <Image.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding SelectedItem.SaveImageCommand}" Header="Save as PNG"/>
                        </ContextMenu>
                    </Image.ContextMenu>
                </Image>
            </Canvas>
        </StackPanel>
        <Border
        BorderThickness="1"
        Padding="0"
        Grid.Column="0"
        ClipToBounds="True"
        Background="{StaticResource ContentBackground}">
            <Border.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Reset Zoom/Pan" Click="ResetZoomPan" />
            </ContextMenu>
        </Border.ContextMenu>
        <Border
                BorderThickness="1"
                x:Name="ImagePreviewCanvas"
                ClipToBounds="True"
                Background="{StaticResource ContentBackground}">
            <Canvas
                x:Name="ImagePreview"
                RenderTransformOrigin="0.5,0.5">
                    <Image
                    x:Name="ActualImage"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ClipToBounds="False"
                    Source="{Binding Image}"
                    RenderTransformOrigin="0.5,0.5"
                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                    Opacity="1"/>
                    <ListBox ItemsSource="{Binding OverlayItems}" SelectedItem="{Binding SelectedItem}" Width="{Binding Image.Width}" Height="{Binding Image.Height}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                                <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                                <Setter Property="Width" Value="{Binding Width}"/>
                                <Setter Property="Height" Value="{Binding Height}"/>
                                <Setter Property="ToolTip" Value="{Binding Name}"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Opacity" Value="0.5"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="1.0"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border Margin="-1" BorderThickness="1" BorderBrush="{StaticResource WolvenKitCyan50}" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <TextBlock TextTrimming="None" Text="{Binding Name}" Margin="2,0,0,0" FontSize="8" VerticalAlignment="Bottom" HorizontalAlignment="Left" Foreground="{StaticResource WolvenKitCyan50}"/>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Canvas>
        </Border>
        </Border>
        
        <Border IsHitTestVisible="False">
            <Border.Style>
                <Style TargetType="Border">
                    <!--Setter Property="Background" Value="{StaticResource WolvenKitRed50}" /-->
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="Background" Value="Transparent" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsDragging}" Value="True">
                            <Setter Property="Background" Value="{StaticResource WolvenKitRed50}" />
                            <Setter Property="BorderBrush" Value="{StaticResource WolvenKitRed}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
    </Grid>
</reactiveUi:ReactiveUserControl>
