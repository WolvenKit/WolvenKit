<reactiveUi:ReactiveUserControl
    x:Class="WolvenKit.Views.Tools.ProjectExplorerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:data="clr-namespace:Syncfusion.Data;assembly=Syncfusion.Data.WPF"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:helpers="clr-namespace:WolvenKit.Functionality.Helpers"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:WolvenKit.Views.Tools"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:others="clr-namespace:WolvenKit.Views.Others"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:tools="clr-namespace:WolvenKit.App.ViewModels.Tools;assembly=WolvenKit.App"
    x:Name="uc"
    d:DataContext="{d:DesignInstance Type=tools:ProjectExplorerViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="400"
    x:TypeArguments="tools:ProjectExplorerViewModel"
    ContextMenuOpening="RefreshModifierStates"
    mc:Ignorable="d">

    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <hc:ThemeResources RequestedTheme="Dark" />
                <hc:Theme />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="DragDropTemplate">
                <Border
                    x:Name="border"
                    Width="250"
                    Padding="8"
                    Background="{StaticResource ContentBackgroundAlt}"
                    BorderBrush="{StaticResource Border}"
                    BorderThickness="1">
                    <!--  this should update based on the context  -->
                    <TextBlock
                        FontSize="12"
                        Foreground="#ffffff"
                        Text="Move file(s) here - hold control to copy" />
                </Border>
            </DataTemplate>

            <ContextMenu
                x:Key="TreeGridContextMenu"
                FontSize="11"
                KeyDown="OnKeyStateChanged"
                KeyUp="OnKeyStateChanged"
                Style="{DynamicResource WPFContextMenuStyle}">
                <MenuItem
                    Margin="0"
                    Header="Actions"
                    Visibility="Collapsed">

                    <MenuItem Command="{Binding AddAllImportsCommand}" Header="Add all dependencies" />
                    <MenuItem Command="{Binding FastRenderCommand}" Header="Fast render" />
                </MenuItem>

                <MenuItem Command="{Binding OpenInMlsbCommand}" Header="Open in MlSetupbuilder" />

                <Separator />

                <MenuItem
                    x:Name="ConvertToJsonMenuItem"
                    Command="{Binding ConvertToCommand}"
                    Header="Convert to JSON"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <MenuItem.Icon>
                        <Grid>
                            <iconPacks:PackIconCodicons
                                Width="13"
                                Height="13"
                                Padding="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Kind="Json" />
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    x:Name="ConvertFromJsonMenuItem"
                    Command="{Binding ConvertFromCommand}"
                    Header="Convert from JSON"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <MenuItem.Icon>
                        <Grid>
                            <iconPacks:PackIconCodicons
                                Width="13"
                                Height="13"
                                Padding="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Kind="Json" />
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>

                <Separator />

                <MenuItem
                    Command="{Binding DeleteFileCommand}"
                    Header="Delete"
                    InputGestureText="Del">
                    <MenuItem.Icon>
                        <iconPacks:PackIconForkAwesome
                            Width="13"
                            Height="13"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            Kind="Trash" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Command="{Binding RenameFileCommand}"
                    Header="Rename"
                    InputGestureText="F2">
                    <MenuItem.Icon>
                        <iconPacks:PackIconForkAwesome
                            Width="13"
                            Height="13"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            Kind="Pencil" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding CopyFileCommand}" Header="Copy">
                    <MenuItem.Icon>
                        <iconPacks:PackIconMaterial
                            Width="13"
                            Height="13"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            Kind="ContentCopy" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding PasteFileCommand}" Header="Paste">
                    <MenuItem.Icon>
                        <iconPacks:PackIconMaterial
                            Width="13"
                            Height="13"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            Kind="ContentPaste" />
                    </MenuItem.Icon>
                </MenuItem>

                <Separator />

                <!--  =======================================================================  -->
                <!--  Copy commands  -->
                <!--  =======================================================================  -->

                <MenuItem
                    Command="{Binding CopyRelPathCommand}"
                    Header="Copy relative path to game file"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <MenuItem
                    Command="{Binding CopyAbsPathToCurrentFileCommand}"
                    Header="Copy absolute path"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <MenuItem
                    Command="{Binding CopyAbsPathToCurrentFolderCommand}"
                    Header="Copy absolute path to containing folder"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <MenuItem
                    Command="{Binding CopyAbsPathToRawFolderCommand}"
                    Header="Copy absolute path to raw folder"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <MenuItem
                    Command="{Binding CopyAbsPathToArchiveFolderCommand}"
                    Header="Copy absolute path to archive folder"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />


                <!--  =======================================================================  -->
                <!--  /Copy commands  -->
                <!--  =======================================================================  -->


                <!--  Context menu: Open in Asset Browser  -->
                <MenuItem
                    Command="{Binding OpenInAssetBrowserCommand}"
                    Header="Open in Asset Browser"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <MenuItem.Icon>
                        <iconPacks:PackIconForkAwesome
                            Width="13"
                            Height="13"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            Kind="ArrowCircleRight" />
                    </MenuItem.Icon>
                </MenuItem>

                <!--  Context menu: Replace with original  -->
                <MenuItem
                    Command="{Binding OverwriteWithGameFileCommand}"
                    Header="Replace with original"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <MenuItem.Icon>
                        <iconPacks:PackIconForkAwesome
                            Width="13"
                            Height="13"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            Kind="Refresh" />
                    </MenuItem.Icon>
                </MenuItem>

                <!--  Context menu: Add dependencies  -->
                <MenuItem
                    Command="{Binding AddDependenciesCommand}"
                    Header="Add dependencies"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <MenuItem.Icon>
                        <iconPacks:PackIconForkAwesome
                            Width="13"
                            Height="13"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            Kind="ArrowCircleDown" />
                    </MenuItem.Icon>
                </MenuItem>

                <Separator />

                <!--  Context menu: Create new folder  -->
                <MenuItem
                    Command="{Binding Path=CreateNewDirectoryCommand}"
                    Header="Create new folder"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <MenuItem.Icon>
                        <iconPacks:PackIconForkAwesome
                            Width="13"
                            Height="13"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            Kind="Folder" />
                    </MenuItem.Icon>
                </MenuItem>

                <!--  Context menu: Open in Explorer  -->
                <MenuItem Command="{Binding OpenInFileExplorerCommand}" Header="Open in Windows Explorer">
                    <MenuItem.Icon>
                        <iconPacks:PackIconMaterial
                            Width="13"
                            Height="13"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            Kind="FolderOpen" />
                    </MenuItem.Icon>
                </MenuItem>

            </ContextMenu>

            <DataTemplate x:Key="TreeGridCellTemplate">
                <Grid>

                    <Grid.Resources>
                        <Style x:Key="WolvenKitTreeGridButton" TargetType="{x:Type helpers:TreeGridButton}">
                            <Setter Property="Border.Background" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Setter Property="Border.Padding" Value="5,0" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Margin" Value="5,0,0,0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type helpers:TreeGridButton}">
                                        <Border
                                            Padding="{TemplateBinding Border.Padding}"
                                            Background="{TemplateBinding Border.Background}"
                                            CornerRadius="2">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsDirectory}" Value="False" />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Border}, AncestorLevel=1}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                    <Condition Property="IsPressed" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Border.Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource Self}}" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                    <Condition Property="IsPressed" Value="False" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Border.Background" Value="{Binding HoverBackground, RelativeSource={RelativeSource Self}}" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style
                            x:Key="WolvenKitTreeGridButtonDirectory"
                            BasedOn="{StaticResource WolvenKitTreeGridButton}"
                            TargetType="{x:Type helpers:TreeGridButton}">
                            <Setter Property="Border.Padding" Value="2,0" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Border}, AncestorLevel=1}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                        <Style x:Key="PE_FileIconStyle" TargetType="{x:Type others:FileIcon}">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeGridExpanderCell}}}" Value="True" />
                                        <Condition Binding="{Binding Path=HasChildNodes, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeGridExpanderCell}}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Type" Value="Open" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="13" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <others:FileIcon
                        Width="13"
                        Height="19"
                        Icon="{Binding Extension}"
                        Style="{StaticResource PE_FileIconStyle}" />
                    <TextBlock
                        x:Name="TemplateTextBlock"
                        Grid.Column="1"
                        Margin="5,0,0,2"
                        VerticalAlignment="Center"
                        Text="{Binding Path=Name}" />
                    <TextBlock
                        x:Name="FileSizeTextBlock"
                        Grid.Column="1"
                        Margin="5,0,0,2"
                        VerticalAlignment="Center"
                        Text="{Binding Path=Name}" />

                    <!--  Open in Windows Explorer - Open file - Delete  -->
                    <StackPanel
                        Grid.Column="2"
                        Background="{StaticResource ContentBackground}"
                        Orientation="Horizontal">

                        <!--  Open in Explorer  -->
                        <helpers:TreeGridButton
                            BorderBrush="{StaticResource WolvenKitYellow}"
                            Command="{Binding ViewModel.OpenInFileExplorerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ProjectExplorerView}}}"
                            CommandParameter="{Binding}"
                            HoverBackground="{StaticResource WolvenKitYellowShadow}"
                            Style="{StaticResource WolvenKitTreeGridButtonDirectory}"
                            ToolTip="Open in Windows Explorer">
                            <helpers:TreeGridButton.Content>
                                <iconPacks:PackIconMaterial
                                    Width="11"
                                    Height="11"
                                    Margin="0,0,0,0"
                                    Foreground="#222"
                                    Kind="FolderOpen" />
                            </helpers:TreeGridButton.Content>
                        </helpers:TreeGridButton>

                        <!--  Open File  -->
                        <helpers:TreeGridButton
                            BorderBrush="{StaticResource WolvenKitCyan}"
                            Command="{Binding ViewModel.OpenFileCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ProjectExplorerView}}}"
                            CommandParameter="{Binding}"
                            HoverBackground="{StaticResource WolvenKitCyanShadow}"
                            Style="{StaticResource WolvenKitTreeGridButton}"
                            ToolTip="Open this file">
                            <helpers:TreeGridButton.Content>
                                <iconPacks:PackIconMaterial
                                    Width="11"
                                    Height="11"
                                    Margin="-1,0,0,0"
                                    Foreground="#222"
                                    Kind="OpenInNew" />
                            </helpers:TreeGridButton.Content>
                        </helpers:TreeGridButton>

                        <!--  Delete  -->
                        <helpers:TreeGridButton
                            syncfusion:FocusManagerHelper.FocusedElement="True"
                            BorderBrush="{StaticResource WolvenKitRed}"
                            Command="{Binding ViewModel.DeleteFileCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ProjectExplorerView}}}"
                            HoverBackground="{StaticResource WolvenKitRedShadow}"
                            Style="{StaticResource WolvenKitTreeGridButtonDirectory}"
                            ToolTip="Delete this file/folder">
                            <helpers:TreeGridButton.Content>
                                <iconPacks:PackIconForkAwesome
                                    Width="15"
                                    Height="11"
                                    Margin="-1,0,0,0"
                                    Kind="Trash" />
                            </helpers:TreeGridButton.Content>
                        </helpers:TreeGridButton>

                        <helpers:TreeGridButton
                            Width="0"
                            Margin="0,0,10,0"
                            Style="{StaticResource WolvenKitTreeGridButtonDirectory}" />

                    </StackPanel>

                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="TreeGridCellTemplateSimple">
                <Grid>
                    <Grid.Resources>
                        <Style x:Key="PE_FileIconStyle" TargetType="{x:Type others:FileIcon}">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeGridExpanderCell}}}" Value="True" />
                                        <Condition Binding="{Binding Path=HasChildNodes, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeGridExpanderCell}}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Type" Value="Open" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="13" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <others:FileIcon
                        Width="13"
                        Height="19"
                        Icon="{Binding Extension}"
                        Style="{StaticResource PE_FileIconStyle}" />
                    <TextBlock
                        x:Name="TemplateTextBlock"
                        Grid.Column="1"
                        Margin="5,0,0,2"
                        VerticalAlignment="Center"
                        Text="{Binding Path=Name}"
                        TextTrimming="CharacterEllipsis" />
                </Grid>
            </DataTemplate>

            <Style
                x:Key="WolvenKitPESourceTabs"
                BasedOn="{StaticResource SyncfusionTabItemExtStyle}"
                TargetType="{x:Type syncfusion:TabItemExt}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderThickness" Value="0,0,0,2" />
                <Setter Property="BorderBrush" Value="{StaticResource WolvenKitRedShadow}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type syncfusion:TabItemExt}">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <TextBlock
                                    Margin="6,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Header}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{StaticResource WolvenKitRed}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource WolvenKitRed}" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity" Value="0.8" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="HideOnShift" BasedOn="{StaticResource ButtonDefault}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsShiftKeyPressed}" Value="False">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsShiftKeyPressed}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Button}" x:Key="UnhideOnShift" BasedOn="{StaticResource ButtonDefault}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsShiftKeyPressed}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsShiftKeyPressed}" Value="True">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>

    </UserControl.Resources>

    <Grid hc:ThemeManager.RequestedAccentColor="{DynamicResource MahApps.Brushes.Accent3}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <syncfusion:TabControlExt
            Name="tabControl"
            Height="25"
            Margin="0,0,0,0"
            AllowDragDrop="False"
            AllowDrop="False"
            BorderThickness="0,0,0,1"
            CloseButtonType="Hide"
            SelectedIndex="{Binding SelectedTabIndex}"
            ShowTabItemContextMenu="False"
            Style="{StaticResource WolvenKitTabControl}"
            TabListContextMenuOptions="Default">

            <syncfusion:TabItemExt>
                <syncfusion:TabItemExt.Style>
                    <Style BasedOn="{StaticResource SyncfusionTabItemExtStyle}" TargetType="{x:Type syncfusion:TabItemExt}">
                        <Setter Property="Background" Value="{StaticResource WolvenKitRedShadow}" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type syncfusion:TabItemExt}">
                                    <Border Background="{TemplateBinding Background}">
                                        <TextBlock
                                            Margin="6,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="11"
                                            FontWeight="Normal"
                                            Foreground="White"
                                            Text="SOURCE" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{StaticResource WolvenKitRed}" />
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="False" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Opacity" Value="0.8" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </syncfusion:TabItemExt.Style>
            </syncfusion:TabItemExt>
            <syncfusion:TabItemExt Header="archive" Style="{StaticResource WolvenKitPESourceTabs}" />
            <syncfusion:TabItemExt Header="raw" Style="{StaticResource WolvenKitPESourceTabs}" />
            <syncfusion:TabItemExt>
                <syncfusion:TabItemExt.Style>
                    <Style BasedOn="{StaticResource SyncfusionTabItemExtStyle}" TargetType="{x:Type syncfusion:TabItemExt}">
                        <Setter Property="Background" Value="{StaticResource WolvenKitCyanShadow}" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type syncfusion:TabItemExt}">
                                    <Border Background="{TemplateBinding Background}">
                                        <TextBlock
                                            Margin="6,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="11"
                                            FontWeight="Normal"
                                            Foreground="Black"
                                            Text="RESOURCES" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{StaticResource WolvenKitCyan}" />
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="False" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Opacity" Value="0.8" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </syncfusion:TabItemExt.Style>
            </syncfusion:TabItemExt>

        </syncfusion:TabControlExt>

        <Border
            Grid.Row="1"
            Height="Auto"
            BorderBrush="{StaticResource BorderBrush}"
            BorderThickness="0,0,0,1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <hc:SearchBar
                    x:Name="PESearchBar"
                    Grid.Column="0"
                    Height="30"
                    Margin="3"
                    VerticalAlignment="Top"
                    hc:InfoElement.Necessary="True"
                    hc:InfoElement.Placeholder="Search"
                    Background="Transparent"
                    BorderBrush="{StaticResource MahApps.Brushes.Gray.SemiTransparent}"
                    BorderThickness="0,0,0,0"
                    FlowDirection="LeftToRight"
                    SearchStarted="PESearchBar_OnSearchStarted"
                    ShowClearButton="True"
                    Style="{StaticResource SearchBarExtendBaseStyle}" />
                <StackPanel
                    Grid.Column="1"
                    Margin="0,0,3,0"
                    Orientation="Horizontal">
                    <Button
                        Margin="3,0,0,0"
                        Click="ExpandAll_OnClick"
                        Style="{StaticResource HideOnShift}"
                        ToolTip="Expand All">
                        <iconPacks:PackIconCodicons
                            Width="13"
                            Height="13"
                            Kind="ExpandAll" />
                    </Button>
                    <Button
                        Margin="3,0,0,0"
                        Click="CollapseAll_OnClick"
                        Style="{StaticResource HideOnShift}"
                        ToolTip="Collapse All">
                        <iconPacks:PackIconCodicons
                            Width="13"
                            Height="13"
                            Kind="CollapseAll" />
                    </Button>
                    <Button
                        Margin="3,0,0,0"
                        Click="ExpandChildren_OnClick"
                        Style="{StaticResource UnhideOnShift}"
                        ToolTip="Expand Children">
                        <iconPacks:PackIconBootstrapIcons
                            Width="13"
                            Height="13"
                            Kind="ArrowsExpand" />
                    </Button>
                    <Button
                        Margin="3,0,0,0"
                        Click="CollapseChildren_OnClick"
                        Style="{StaticResource UnhideOnShift}"
                        ToolTip="Collapse Children">
                        <iconPacks:PackIconBootstrapIcons
                            Width="13"
                            Height="13"
                            Kind="ArrowsCollapse" />
                    </Button>
                    <Button
                        Margin="3,0,0,0"
                        Click="ScrollToOpenFile_OnClick"
                        IsEnabled="{Binding CanScrollToOpenFile}"
                        ToolTip="Scroll to open file">
                        <iconPacks:Material
                            Width="13"
                            Height="13"
                            Kind="Crosshairs" />
                    </Button>
                    <Button
                        x:Name="RefreshButton"
                        Margin="3,0,0,0"
                        ToolTip="Refresh all Files">
                        <iconPacks:PackIconCodicons
                            Width="13"
                            Height="13"
                            Foreground="CornflowerBlue"
                            Kind="Refresh" />
                    </Button>
                    <Button
                        x:Name="OpenFolderButton"
                        Margin="3,0,0,0"
                        ToolTip="Open Root Folder">
                        <iconPacks:PackIconCodicons
                            Width="13"
                            Height="13"
                            Foreground="Yellow"
                            Kind="RootFolderOpened" />
                    </Button>

                    <ToggleButton
                        Margin="3,0,0,0"
                        hc:VisualElement.HighlightBackground="{StaticResource WolvenKitRed}"
                        IsChecked="{Binding IsFlatModeEnabled}"
                        ToolTip="Toggle Flat File List">
                        <ToggleButton.Style>
                            <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="ToggleButton">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="{StaticResource WolvenKitRed}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                        <iconPacks:PackIconCodicons
                            Width="13"
                            Height="13"
                            Kind="ListFlat" />
                    </ToggleButton>
                </StackPanel>
            </Grid>
        </Border>

        <!--  Hierarchical Tree View  -->
        <syncfusion:SfTreeGrid
            Name="TreeGrid"
            Grid.Row="2"
            Margin="0,0,0,0"
            AllowDraggingRows="True"
            AllowDrop="True"
            AllowEditing="False"
            AllowFiltering="False"
            AllowResizingColumns="False"
            AutoGenerateColumns="False"
            BorderThickness="0"
            ChildPropertyName="Children"
            ColumnSizer="Star"
            ContextMenu="{StaticResource TreeGridContextMenu}"
            CurrentCellBorderBrush="White"
            CurrentCellBorderThickness="0"
            FilterLevel="Extended"
            HeaderRowHeight="3"
            NodeExpanded="TreeGrid_OnNodeExpanded"
            NodeCollapsed="TreeGrid_OnNodeCollapsed"
            IsReadOnly="True"
            LiveNodeUpdateMode="AllowDataShaping"
            RowDragDropTemplate="{StaticResource DragDropTemplate}"
            RowDropIndicatorMode="Line"
            RowHeight="19"
            SelectedItem="{Binding SelectedItem}"
            SelectedItems="{Binding SelectedItems, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            SelectionMode="Extended"
            SelfRelationRootValue="0"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.ScrollUnit="Pixel"
            VirtualizingPanel.VirtualizationMode="Recycling"
            Visibility="{Binding IsFlatModeEnabled, Converter={StaticResource BoolInvertConverter}}">

            <syncfusion:SfTreeGrid.Resources>
                <Style TargetType="syncfusion:TreeGridCell">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
                <Style TargetType="syncfusion:TreeGridExpanderCell">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
                <Style TargetType="syncfusion:TreeGridHeaderRowControl">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Margin" Value="0,0,0,3" />
                </Style>
            </syncfusion:SfTreeGrid.Resources>

            <syncfusion:SfTreeGrid.SortColumnDescriptions>
                <syncfusion:SortColumnDescription ColumnName="Name" SortDirection="Ascending" />
            </syncfusion:SfTreeGrid.SortColumnDescriptions>

            <syncfusion:SfTreeGrid.Columns>
                <syncfusion:TreeGridTextColumn
                    CellTemplate="{StaticResource TreeGridCellTemplate}"
                    HeaderText=""
                    HorizontalHeaderContentAlignment="Left"
                    ImmediateUpdateColumnFilter="True"
                    MappingName="Name" />
            </syncfusion:SfTreeGrid.Columns>
        </syncfusion:SfTreeGrid>

        <!--  Flat Tree View  -->
        <syncfusion:SfTreeGrid
            Name="TreeGridFlat"
            Grid.Row="2"
            Margin="0,0,0,0"
            AllowEditing="False"
            AllowFiltering="True"
            AllowResizingColumns="True"
            AllowSorting="True"
            AutoExpandMode="AllNodesExpanded"
            AutoGenerateColumns="False"
            BorderThickness="0"
            ColumnSizer="Star"
            ContextMenu="{StaticResource TreeGridContextMenu}"
            CurrentCellBorderBrush="White"
            CurrentCellBorderThickness="0"
            ExpandStateMappingName="IsExpanded"
            ExpanderColumn="False"
            FilterLevel="Extended"
            HeaderRowHeight="28"
            IsReadOnly="True"
            LiveNodeUpdateMode="AllowDataShaping"
            ParentPropertyName="Hash"
            RowHeight="19"
            SelectedItem="{Binding SelectedItem}"
            SelectedItems="{Binding SelectedItems, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            SelectionMode="Extended"
            SelfRelationRootValue="0"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.ScrollUnit="Pixel"
            VirtualizingPanel.VirtualizationMode="Recycling"
            Visibility="{Binding IsFlatModeEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">

            <syncfusion:SfTreeGrid.Resources>
                <Style TargetType="syncfusion:TreeGridCell">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
                <Style TargetType="syncfusion:TreeGridExpanderCell">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
                <Style TargetType="syncfusion:TreeGridHeaderRowControl">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Margin" Value="0,0,0,3" />
                </Style>
            </syncfusion:SfTreeGrid.Resources>

            <syncfusion:SfTreeGrid.Columns>
                <syncfusion:TreeGridTextColumn
                    Width="220"
                    CellTemplate="{StaticResource TreeGridCellTemplateSimple}"
                    HeaderText="File Name"
                    ImmediateUpdateColumnFilter="True"
                    MappingName="Name"
                    TextTrimming="CharacterEllipsis" />
                <syncfusion:TreeGridTextColumn
                    HeaderText="Path"
                    MappingName="GameRelativePath"
                    ShowToolTip="True"
                    TextTrimming="CharacterEllipsis" />
                <syncfusion:TreeGridTextColumn
                    Width="70"
                    AllowResizing="False"
                    HeaderText="Kind"
                    MappingName="Extension" />
                <syncfusion:TreeGridTextColumn
                    Width="70"
                    AllowResizing="False"
                    HeaderText="Size"
                    MappingName="FileSizeStr" />
            </syncfusion:SfTreeGrid.Columns>
        </syncfusion:SfTreeGrid>

    </Grid>
</reactiveUi:ReactiveUserControl>
