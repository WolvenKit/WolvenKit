<Window
    x:Class="WolvenKit.Views.Dialogs.Windows.AddArchiveXlFilesDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:validators="clr-namespace:WolvenKit.ViewModels.Validators"
    xmlns:controls="clr-namespace:WolvenKit.Views.Controls"
    Title="Add Archive XL files"
    SizeToContent="WidthAndHeight"
    WindowStartupLocation="CenterOwner">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/WolvenKit;component/Themes/ValidationRules.xaml" />
                <hc:ThemeResources />
                <hc:Theme />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid
        Margin="5,5,2,5"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        hc:ThemeManager.RequestedAccentColor="{DynamicResource MahApps.Brushes.Accent3}">

        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <hc:ThemeResources />
                    <hc:Theme />
                </ResourceDictionary.MergedDictionaries>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="SnapsToDevicePixels" Value="true" />
                    <Setter Property="OverridesDefaultStyle" Value="true" />
                    <Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border x:Name="Border"
                                        Padding="2"
                                        SnapsToDevicePixels="true"
                                        Background="Transparent"
                                        CornerRadius="8">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Unselected" />
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                                  Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource WolvenKitCyanColor}" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="ExplanationStyle" TargetType="TextBlock">
                    <Setter Property="Margin" Value="5, 4,5,4" />
                    <Setter Property="Foreground" Value="{StaticResource ForegroundColor_Grey1}" />
                </Style>
                <Style x:Key="LabelStyle" TargetType="TextBlock">
                    <Setter Property="Margin" Value="5,15,0,4" />
                    <Setter Property="Foreground" Value="{StaticResource WolvenKitTan}" />
                </Style>
                <Style x:Key="LabelStyleRow2" TargetType="TextBlock" BasedOn="{StaticResource LabelStyle}">
                    <Setter Property="Margin" Value="5,0,0,4" />
                </Style>
                <Style x:Key="ComboboxStyle" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">

                    <Setter Property="Margin" Value="5,15,0,4" />
                    <Setter Property="Padding" Value="5, 7" />
                    <Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
                    <Setter Property="Background" Value="{StaticResource ControlBackgroundColor}" />
                    <Setter Property="BorderThickness" Value="1" />
                </Style>
                <Style x:Key="TextBoxWithControlValidatorsStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxExtendBaseStyle}">
                    <Setter Property="Margin" Value="5,15,0,4" />
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderBrush" Value="DarkRed" />
                            <Setter Property="Background" Value="{StaticResource WolvenKitRedShadow25}" />
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="false">
                            <Setter Property="BorderBrush" Value="{StaticResource ForegroundColor_Grey1}" />
                            <Setter Property="Background" Value="{StaticResource ControlBackgroundColor}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="Validation.HasError" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="Red" />
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Validation.HasError" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="Red" />
                            <Setter Property="Background" Value="{StaticResource WolvenKitRedShadow25}" />
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>

            </ResourceDictionary>
        </Grid.Resources>


        <syncfusion:WizardControl CancelButtonCancelsWindow="True" FinishButtonClosesWindow="True">
            <syncfusion:WizardPage
                BackVisibility="Collapsed"
                CancelVisibility="Visible"
                FinishVisibility="Visible"
                FinishEnabled="{Binding IsValid}"
                HelpVisibility="Visible"
                NextVisibility="Collapsed"
                PageType="Exterior"
                Padding="12, 12">
                
                <StackPanel Orientation="Vertical">


                    <!-- ============================================================= -->
                    <!-- ============= Grid 1: Depot Path and item name ============== -->
                    <!-- ============================================================= -->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="600" />
                        </Grid.ColumnDefinitions>

                        <!-- Item Type -->
                        <TextBlock Text="Item Type"
                                   Visibility="{Binding CreateFactory, Converter={StaticResource InvertBooleanConverter}}"
                                   Style="{StaticResource LabelStyle}"
                                   Grid.Row="0"
                                   Grid.Column="0" />
                        <hc:ComboBox
                            Visibility="{Binding CreateFactory, Converter={StaticResource InvertBooleanConverter}}"
                            SelectedValuePath="Content"
                            SelectedValue="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}"
                            IsEditable="True"
                            KeyUp="ComboBox_KeyUp"
                            IsTextSearchEnabled="False"
                            IsEnabled="True"
                            GotFocus="Combobox_FocusGained"
                            MouseDown="Combobox_OnClick"
                            Grid.Row="0"
                            Grid.Column="1"
                            Style="{StaticResource ComboboxStyle}"
                            ItemsSource="{Binding EquipmentItemSlots}"
                            SelectionChanged="ItemType_OnChanged" />
                        <TextBlock
                            Visibility="{Binding CreateFactory, Converter={StaticResource InvertBooleanConverter}}"
                            Style="{StaticResource ExplanationStyle}"
                            Grid.Row="1"
                            Grid.Column="1"
                            Text="Where do you want to equip your item?" />

                        <!-- Item name -->
                        <!-- We also need this to create a factory, since we need to generate a subfolder -->
                        <TextBlock Text="Item Name"
                                   Style="{StaticResource LabelStyle}"
                                   Grid.Row="2"
                                   Grid.Column="0" />
                        <hc:TextBox
                            x:Name="ItemNameTextBox"
                            Grid.Row="2"
                            Grid.Column="1"
                            Style="{StaticResource TextBoxWithControlValidatorsStyle}"
                            KeyUp="ItemName_OnKeyUp">
                            <TextBox.Text>
                                <Binding Path="ItemName" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:ItemNameValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </hc:TextBox>

                        <controls:ValidationTextBlock
                            BoundControl="{Binding ElementName=ItemNameTextBox}"
                            DefaultText="Will be used to generate file names and internal properties."
                            SecondaryText="Will be used to generate your control file names."
                            UseSecondaryText="{Binding CreateFactory}"
                            Style="{StaticResource TextboxStyle}"
                            KeyUp="ItemName_OnKeyUp" />
                        <TextBlock
                            Visibility="{Binding CreateFactory, Converter={StaticResource InvertBooleanConverter}}"
                            Style="{StaticResource ExplanationStyle}"
                            Grid.Row="3"
                            Grid.Column="1"
                            Text="This will be used to generate your item's spawn code and internal names." />
                        <TextBlock
                            Visibility="{Binding CreateFactory, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Style="{StaticResource ExplanationStyle}"
                            Grid.Row="3"
                            Grid.Column="1" />


                        <!-- Depot path -->
                        <TextBlock Text="Depot Path"
                                   Style="{StaticResource LabelStyle}"
                                   Grid.Row="4"
                                   Grid.Column="0" />

                        <hc:TextBox x:Name="DepotPathTextBox"
                                    Grid.Row="4"
                                    Grid.Column="1"
                                    Style="{StaticResource TextBoxWithControlValidatorsStyle }"
                                    KeyUp="DepotPath_OnKeyUp">
                            <TextBox.Text>
                                <Binding Path="DepotPath" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:DepotPathValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </hc:TextBox>

                        <controls:ValidationTextBlock
                            BoundControl="{Binding ElementName=DepotPathTextBox}"
                            DefaultText="Your custom subfolder in your project. Directories will be created if they don't exist."
                            Grid.Row="5"
                            Grid.Column="1" />

                    </Grid>

                    <!-- ============================================================= -->
                    <!-- ===== Grid 2: Item properties (don't show for factory) ===== -->
                    <!-- ============================================================= -->
                    <Grid Visibility="{Binding CreateFactory, Converter={StaticResource InvertBooleanConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="600" />
                        </Grid.ColumnDefinitions>


                        <!-- Item Subtype -->
                        <TextBlock Text="Item subtype (optional)"
                                   Style="{StaticResource LabelStyle}"
                                   TextWrapping="Wrap"
                                   Grid.Row="2"
                                   Grid.RowSpan="2"
                                   Grid.Column="0" />
                        <hc:ComboBox
                            x:Name="ItemSubtypeControl"
                            SelectedValuePath="Content"
                            SelectedValue="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}"
                            IsEditable="True"
                            KeyUp="ComboBox_KeyUp"
                            IsTextSearchEnabled="False"
                            GotFocus="Combobox_FocusGained"
                            MouseDown="Combobox_OnClick"
                            Grid.Row="2"
                            Grid.Column="1"
                            IsEnabled="{Binding HasSlot}"
                            Style="{StaticResource ComboboxStyle}"
                            ItemsSource="{Binding EquipmentItemSubSlots}"
                            SelectionChanged="SubSlot_OnChanged" />
                        <TextBlock
                            Style="{StaticResource ExplanationStyle}"
                            Grid.Row="3"
                            Grid.Column="1"
                            Text="Select a specific item type (e.g. if you need specific footstep sounds)" />


                        <!-- EqEx Type -->
                        <TextBlock Text="EquipmentEx slot (optional)"
                                   Style="{StaticResource LabelStyle}"
                                   TextWrapping="Wrap"
                                   Grid.Row="4"
                                   Grid.RowSpan="2"
                                   Grid.Column="0" />
                        <hc:ComboBox
                            x:Name="EquipmentExControl"
                            IsTextSearchEnabled="True"
                            SelectedValue="{Binding EquipmentExSlot}"
                            Grid.Row="4"
                            Grid.Column="1"
                            Style="{StaticResource ComboboxStyle}"
                            ItemsSource="{Binding EquipmentExSlots}"
                            SelectionChanged="EquipmentExSlot_OnChanged" />
                        <TextBlock
                            Style="{StaticResource ExplanationStyle}"
                            Grid.Row="5"
                            Grid.Column="1"
                            Text="Select an EquipmentEx slot (supports filtering)" />

                        <!-- Hiding tags -->
                        <TextBlock Text="Visibility tags (optional)"
                                   Style="{StaticResource LabelStyle}"
                                   TextWrapping="Wrap"
                                   Grid.Row="6"
                                   Grid.RowSpan="2"
                                   Grid.Column="0" />

                        <hc:CheckComboBox
                            Grid.Row="6"
                            Grid.Column="1"
                            SelectedValue="{Binding HidingTags}"
                            ItemsSource="{Binding HidingTagsSource}" />
                        <TextBlock
                            Style="{StaticResource ExplanationStyle}"
                            Grid.Row="7"
                            Grid.Column="1"
                            Text="Hide player body parts?" />


                        <!-- GS tags -->
                        <TextBlock Text="Garment support tags (optional)"
                                   Style="{StaticResource LabelStyle}"
                                   TextWrapping="Wrap"
                                   Grid.Row="8"
                                   Grid.RowSpan="2"
                                   Grid.Column="0" />

                        <hc:ComboBox
                            SelectedValuePath="Content"
                            SelectedValue="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}"
                            IsEditable="True"
                            KeyUp="ComboBox_KeyUp"
                            IsTextSearchEnabled="False"
                            GotFocus="Combobox_FocusGained"
                            MouseDown="Combobox_OnClick"
                            Grid.Row="8"
                            Grid.Column="1"
                            Style="{StaticResource ComboboxStyle}"
                            ItemsSource="{Binding GarmentSupportTagsSource}"
                            SelectionChanged="GarmentSupportTag_OnChanged" />
                        <TextBlock
                            Style="{StaticResource ExplanationStyle}"
                            Grid.Row="9"
                            Grid.Column="1"
                            Text="Add tags for fine-tuning garment support?" />

                        <!-- Hide in First Person -->
                        <TextBlock Text="Hide in First Person?"
                                   Style="{StaticResource LabelStyle}"
                                   TextWrapping="Wrap"
                                   Grid.Row="10"
                                   Grid.RowSpan="2"
                                   Grid.Column="0" />
                        <CheckBox Grid.Row="10"
                                  Grid.Column="1"
                                  Margin="4,10, 10, 5"
                                  IsChecked="{Binding HideInFpp}" />
                        <TextBlock
                            Style="{StaticResource ExplanationStyle}"
                            Grid.Row="11"
                            Grid.Column="1"
                            Text="Check to have your item visible in third person only (useful for face masks or helmets)" />

                        <!-- Force Hair -->
                        <TextBlock Text="Force hair visibility?"
                                   Visibility="{Binding IsHeadItem, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Style="{StaticResource LabelStyle}"
                                   TextWrapping="Wrap"
                                   Grid.Row="12"
                                   Grid.RowSpan="2"
                                   Grid.Column="0" />
                        <CheckBox Grid.Row="12"
                                  Visibility="{Binding IsHeadItem, Converter={StaticResource BooleanToVisibilityConverter}}"
                                  Grid.Column="1"
                                  Margin="4,10, 10, 5"
                                  IsChecked="{Binding ForceHair}" />
                        <TextBlock
                            Style="{StaticResource ExplanationStyle}"
                            Visibility="{Binding IsHeadItem, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Grid.Row="13"
                            Grid.Column="1"
                            Text="Check to force-display hair (head items hide player hair by default)" />
                    </Grid>

                </StackPanel>


            </syncfusion:WizardPage>
        </syncfusion:WizardControl>

    </Grid>

</Window>