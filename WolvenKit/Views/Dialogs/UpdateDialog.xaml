<reactiveUi:ReactiveUserControl
    x:Class="WolvenKit.Views.Dialogs.UpdateDialog"
    x:TypeArguments="dialogs:UpdateDialogViewModel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dialogs="clr-namespace:WolvenKit.App.ViewModels.Dialogs;assembly=WolvenKit.App"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:templates="clr-namespace:WolvenKit.Views.Templates"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type=dialogs:UpdateDialogViewModel}"
    d:DesignWidth="800"
    d:DesignHeight="450"
    MinWidth="{DynamicResource WolvenKitDialogWidthSmall}"
    MaxWidth="{DynamicResource WolvenKitDialogWidth}"
    Padding="{DynamicResource WolvenKitMargin}"
    Background="{StaticResource ContentBackgroundAlt3}">
    <Grid Margin="{DynamicResource WolvenKitMarginSmall}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Title -->
        <TextBlock
            Grid.Row="0"
            Margin="{DynamicResource WolvenKitMarginSmall}"
            FontSize="{DynamicResource WolvenKitFontHeader}"
            FontWeight="Bold"
            Text="{Binding Title}" />

        <!-- Body -->
        <ScrollViewer
            Grid.Row="1"
            Margin="{DynamicResource WolvenKitMarginSmall}"
            VerticalScrollBarVisibility="Auto"
            Focusable="False">
            <TextBlock
                FontSize="{DynamicResource WolvenKitFontBody}"
                TextWrapping="Wrap"
                Text="{Binding Body}" />
        </ScrollViewer>

        <!-- Actions -->
        <StackPanel
            Grid.Row="2"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <hc:LoadingCircle
                Width="{DynamicResource WolvenKitIcon}"
                Height="{DynamicResource WolvenKitIcon}"
                Margin="{DynamicResource WolvenKitMarginSmall}"
                Foreground="{StaticResource WolvenKitRed}"
                Visibility="{Binding ShowLoadingSpinner,
                                     Converter={StaticResource BooleanToVisibilityConverter}}" />
        </StackPanel>
        <ItemsControl
            Grid.Row="2"
            AlternationCount="1000"
            ItemsSource="{Binding Buttons}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel
                        Margin="0"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button
                        MinWidth="60"
                        Margin="{DynamicResource WolvenKitMarginSmallLeft}"
                        Padding="12,10"
                        Content="{Binding .}"
                        Click="OnDynamicButtonClick">
                        <!-- Rounded, balanced padding, primary first -->
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="{x:Null}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="Margin" Value="{DynamicResource WolvenKitMarginSmallLeft}" />
                                <Setter Property="MinWidth" Value="60" />
                                <Setter Property="Padding" Value="12,10" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border
                                                x:Name="border"
                                                Padding="5,3"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="4">
                                                <ContentPresenter
                                                    Margin="5"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    RecognizesAccessKey="True" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="border" Property="Opacity" Value="0.95" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter TargetName="border" Property="Opacity" Value="0.9" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="border" Property="Opacity" Value="0.6" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                                <!-- Make only the first button the primary action -->
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding (ItemsControl.AlternationIndex),
                                                          RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                                        Value="0">
                                        <Setter Property="Background" Value="{StaticResource WolvenKitRed}" />
                                        <Setter Property="BorderBrush" Value="{x:Null}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</reactiveUi:ReactiveUserControl>